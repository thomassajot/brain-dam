{
    "componentChunkName": "component---node-modules-gatsby-theme-primer-wiki-src-templates-post-query-js",
    "path": "/Obsidian/iOS app/",
    "result": {"data":{"mdx":{"id":"d4a81888-2c27-5252-8f81-f4315dffbcaa","tableOfContents":{"items":[{"url":"#where-are-my-vaults-stored","title":"Where are my vaults stored?"},{"url":"#sync","title":"Sync"},{"url":"#known-issues","title":"Known issues"}]},"fields":{"title":"iOS App","slug":"/Obsidian/iOS app/","url":"https://thomassajot.brain-dam.com/Obsidian/iOS app/","editUrl":"https://github.com/theowenyoung/obsidian-template-gatsby-theme-primer-wiki/tree/main/Obsidian/iOS app.md","lastUpdatedAt":"2021-09-01T22:25:52.000Z","lastUpdated":"9/1/2021","gitCreatedAt":"2021-09-01T22:25:52.000Z","shouldShowTitle":true},"frontmatter":{"title":"","description":null,"imageAlt":null,"tags":[],"date":null,"dateModified":null,"language":null,"seoTitle":null,"image":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The iOS app is now publicly available, and a link to the app store listing can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://obsidian.md/mobile\"\n  }, \"https://obsidian.md/mobile\")), mdx(\"h2\", {\n    \"id\": \"where-are-my-vaults-stored\"\n  }, \"Where are my vaults stored?\"), mdx(\"p\", null, \"If you choose, you can store your vaults in iCloud Drive. These vaults can be found in your iCloud Drive folder, under an app folder named \\\"Obsidian\\\" that shows the Obsidian logo.\"), mdx(\"p\", null, \"If you choose not to use iCloud for a vault, then it will be stored in the sandboxed file system of the Obsidian app. The local vaults are accessible from any other apps that support picking a folder from the file system. As such, apps like Working Copy can be used to sync with Obsidian's local vaults.\"), mdx(\"p\", null, \"==Be aware that if you choose to store your vault locally, they will be automatically deleted by iOS when you uninstall Obsidian's app.==\"), mdx(\"h2\", {\n    \"id\": \"sync\"\n  }, \"Sync\"), mdx(\"h3\", {\n    \"id\": \"quick-start\"\n  }, \"Quick start\"), mdx(\"p\", null, \"If you already have a vault on your desktop, here's the two ways to sync your vault to mobile and access it:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", \"[#iCloud Drive Sync]\", \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", \"[#Obsidian Sync]\", \"]\")), mdx(\"p\", null, \"The two current officially supported sync solutions are iCloud and Obsidian Sync.\\nWorking Copy (git) is another alternative that has been tested to work with Obsidian on iOS.\"), mdx(\"p\", null, \"Currently, there is \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"no\"), \" known support for the following sync services on iOS yet:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dropbox\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Google Drive\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"OneDrive\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Syncthing\")), mdx(\"p\", null, \"If you find out a way to sync using these services on iOS with Obsidian, we would be glad if you can join our Discord server and teach us how to set it up.\"), mdx(\"p\", null, \"In theory, any third party sync providers that can provide background-sync for a specific folder on your device should be able to work, but we are not aware of any other than Working Copy. This is due to the limitations of the highly complex mechanism of cross-app file sharing in iOS, unlike Android which allows easy cross-app file sharing. Because of this, most third party sync providers don't have a proper implementation for background sync on iOS.\"), mdx(\"p\", null, \"Currently Obsidian does not support third party sync providers that expose a virtual file system through FileProvider. We will be attempting this in the future as an improvement.\"), mdx(\"h3\", {\n    \"id\": \"obsidian-sync\"\n  }, \"Obsidian Sync\"), mdx(\"p\", null, \"You can follow the same steps as Android's sync as shown below, making sure that you create a non-iCloud folder as we do not recommend using both Obsidian Sync and iCloud Sync concurrently, which has been reported to cause data loss due to [\", \"[Obsidian Sync#Third party sync|race conditions]\", \"].\"), mdx(\"p\", null, \"!\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Obsidian/Android%20app/#obsidian-sync\",\n    \"title\": \"Android app\"\n  }, \"Android app\"), \"\"), mdx(\"h3\", {\n    \"id\": \"icloud-drive-sync\"\n  }, \"iCloud Drive Sync\"), mdx(\"p\", null, \"To setup a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"new\"), \" synced vault through iCloud Drive:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Start the iOS app and choose \\\"Create a new vault\\\";\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"On desktop, using the \\\"Open another vault\\\" option, point to the new vault location in iCloud.\")), mdx(\"p\", null, \"To setup an \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"existing\"), \" vault to be synced through iCloud Drive:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Start the app and choose \\\"Create a new vault\\\";\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Name it the same as your desktop vault to make \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Advanced%20topics/Using%20obsidian%20URI/\",\n    \"title\": \"inter-vault URIs\"\n  }, \"inter-vault URIs\"), \" work;\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Wait for iCloud to sync this empty folder to your desktop;\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Copy and paste everything under your vault to this empty folder, this will now be your synced folder location;\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"On desktop, using the \\\"Open another vault\\\" option, point to the new vault location in iCloud;\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Wait for iCloud to sync everything to your mobile device.\")), mdx(\"h3\", {\n    \"id\": \"working-copy\"\n  }, \"Working Copy\"), mdx(\"p\", null, \"You can alternatively setup Working Copy to use Git to sync your vault on iOS. To do this, you should create an empty local vault on your device first, then you can \\\"Setup Folder Sync\\\" and select a local vault inside the Obsidian app. Then, you can manually commit & push.\"), mdx(\"h3\", {\n    \"id\": \"third-party-sync-support\"\n  }, \"Third party sync support\"), mdx(\"p\", null, \"Many users asks why Obsidian for Mobile doesn't support their preferred sync solution. Here's a brief explanation on the current state of mobile sync support.\"), mdx(\"p\", null, \"The thing about Obsidian that's different from other apps like 1Writer and iA Writer is that Obsidian works on top of a vault rather than a single note. Many of the core Obsidian functionality depend on the whole vault and all the files inside, such as the link auto-complete, image embedding, tag pane, backlinks, and all the cross-note functionality.\"), mdx(\"p\", null, \"In contrast, most Markdown editing apps simply \\\"open\\\" a single note, let the user perform edits, then save the note back. Because of this, the OS and third party sync providers typically only provide an API for accessing/working with a single file, but not so much for working with a vault (folder of files with potentially subfolders).\"), mdx(\"p\", null, \"For sync, a regular markdown editor app can simply implement the basic \\\"download file when you open a selected file\\\" and \\\"upload the file back when you press save\\\". Obsidian has to download the whole vault to be useful, and keep track of all the modified files (like for example, when you perform a file rename, we might update a bunch of other files for links that has changed due to the rename). On top of that, we need a way to monitor for changes through the sync solution to be able to update our internal caches when files change, to provide accurate links.\"), mdx(\"p\", null, \"Keeping all that in sync with a third party sync provider would be quite tedious - and this is actually part of the reason why most sync providers don't make a proper sync client for mobile and you have to use a third party app (like DropSync or FolderSync) to do it. Unfortunately, such apps don't exist on iOS because of app sandboxing.\"), mdx(\"h2\", {\n    \"id\": \"known-issues\"\n  }, \"Known issues\"), mdx(\"h3\", {\n    \"id\": \"icloud-folder-on-macos\"\n  }, \"iCloud folder on macOS\"), mdx(\"p\", null, \"If you find yourself unable to drag & drop things into the iCloud folder in Finder on macOS, please download the latest Obsidian Desktop release from \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://obsidian.md\"\n  }, \"https://obsidian.md\"), \" as it contains a fix for this issue. Once it's installed, running the app should automatically cause iCloud to update the folder permissions. If this does not work right away, you may need to restart your machine.\"), mdx(\"h3\", {\n    \"id\": \"paste-menu-sometimes-not-appearing\"\n  }, \"Paste menu sometimes not appearing\"), mdx(\"p\", null, \"Some users runs into an issue where tapping on the cursor does not show the paste menu. As a workaround, you can use the three-finger tap gesture to trigger a global edit menu which can be used to paste into the text.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"The iOS app is now publicly available, and a link to the app store listing can be found at https://obsidian.md/mobile\n\n## Where are my vaults stored?\n\nIf you choose, you can store your vaults in iCloud Drive. These vaults can be found in your iCloud Drive folder, under an app folder named \"Obsidian\" that shows the Obsidian logo.\n\nIf you choose not to use iCloud for a vault, then it will be stored in the sandboxed file system of the Obsidian app. The local vaults are accessible from any other apps that support picking a folder from the file system. As such, apps like Working Copy can be used to sync with Obsidian's local vaults.\n\n==Be aware that if you choose to store your vault locally, they will be automatically deleted by iOS when you uninstall Obsidian's app.==\n\n## Sync\n\n### Quick start\n\nIf you already have a vault on your desktop, here's the two ways to sync your vault to mobile and access it:\n\n- [[#iCloud Drive Sync]]\n- [[#Obsidian Sync]]\n\nThe two current officially supported sync solutions are iCloud and Obsidian Sync.\nWorking Copy (git) is another alternative that has been tested to work with Obsidian on iOS.\n\nCurrently, there is **no** known support for the following sync services on iOS yet:\n- Dropbox\n- Google Drive\n- OneDrive\n- Syncthing\n\nIf you find out a way to sync using these services on iOS with Obsidian, we would be glad if you can join our Discord server and teach us how to set it up.\n\nIn theory, any third party sync providers that can provide background-sync for a specific folder on your device should be able to work, but we are not aware of any other than Working Copy. This is due to the limitations of the highly complex mechanism of cross-app file sharing in iOS, unlike Android which allows easy cross-app file sharing. Because of this, most third party sync providers don't have a proper implementation for background sync on iOS.\n\nCurrently Obsidian does not support third party sync providers that expose a virtual file system through FileProvider. We will be attempting this in the future as an improvement.\n\n### Obsidian Sync\n\nYou can follow the same steps as Android's sync as shown below, making sure that you create a non-iCloud folder as we do not recommend using both Obsidian Sync and iCloud Sync concurrently, which has been reported to cause data loss due to [[Obsidian Sync#Third party sync|race conditions]].\n\n![[Android app#Obsidian Sync]]\n\n### iCloud Drive Sync\n\nTo setup a **new** synced vault through iCloud Drive:\n\n1. Start the iOS app and choose \"Create a new vault\";\n2. On desktop, using the \"Open another vault\" option, point to the new vault location in iCloud.\n\nTo setup an **existing** vault to be synced through iCloud Drive:\n\n1. Start the app and choose \"Create a new vault\";\n2. Name it the same as your desktop vault to make [[Using obsidian URI|inter-vault URIs]] work;\n3. Wait for iCloud to sync this empty folder to your desktop;\n4. Copy and paste everything under your vault to this empty folder, this will now be your synced folder location;\n5. On desktop, using the \"Open another vault\" option, point to the new vault location in iCloud;\n6. Wait for iCloud to sync everything to your mobile device.\n\n### Working Copy\n\nYou can alternatively setup Working Copy to use Git to sync your vault on iOS. To do this, you should create an empty local vault on your device first, then you can \"Setup Folder Sync\" and select a local vault inside the Obsidian app. Then, you can manually commit & push.\n\n### Third party sync support\n\nMany users asks why Obsidian for Mobile doesn't support their preferred sync solution. Here's a brief explanation on the current state of mobile sync support.\n\nThe thing about Obsidian that's different from other apps like 1Writer and iA Writer is that Obsidian works on top of a vault rather than a single note. Many of the core Obsidian functionality depend on the whole vault and all the files inside, such as the link auto-complete, image embedding, tag pane, backlinks, and all the cross-note functionality.\n\nIn contrast, most Markdown editing apps simply \"open\" a single note, let the user perform edits, then save the note back. Because of this, the OS and third party sync providers typically only provide an API for accessing/working with a single file, but not so much for working with a vault (folder of files with potentially subfolders).\n\nFor sync, a regular markdown editor app can simply implement the basic \"download file when you open a selected file\" and \"upload the file back when you press save\". Obsidian has to download the whole vault to be useful, and keep track of all the modified files (like for example, when you perform a file rename, we might update a bunch of other files for links that has changed due to the rename). On top of that, we need a way to monitor for changes through the sync solution to be able to update our internal caches when files change, to provide accurate links.\n\nKeeping all that in sync with a third party sync provider would be quite tedious - and this is actually part of the reason why most sync providers don't make a proper sync client for mobile and you have to use a third party app (like DropSync or FolderSync) to do it. Unfortunately, such apps don't exist on iOS because of app sandboxing.\n\n## Known issues\n\n### iCloud folder on macOS\n\nIf you find yourself unable to drag & drop things into the iCloud folder in Finder on macOS, please download the latest Obsidian Desktop release from https://obsidian.md as it contains a fix for this issue. Once it's installed, running the app should automatically cause iCloud to update the folder permissions. If this does not work right away, you may need to restart your machine.\n\n### Paste menu sometimes not appearing\n\nSome users runs into an issue where tapping on the cursor does not show the paste menu. As a workaround, you can use the three-finger tap gesture to trigger a global edit menu which can be used to paste into the text.\n","excerpt":"The iOS app is now publicly available, and a link to the app store listing can be found at  https://obsidian.md/mobile Where are my vaults …","outboundReferences":[{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Obsidian supports a custom URI protocol \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"obsidian://\"), \" which can be used to trigger various actions within the app. This is commonly used on MacOS and mobile apps for automation and cross-app workflows.\"), mdx(\"p\", null, \"If you have Obsidian installed, this link will open the app on your device: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"obsidian://open\"\n  }, \"Click here\")), mdx(\"h2\", {\n    \"id\": \"installing-obsidian-uri\"\n  }, \"Installing Obsidian URI\"), mdx(\"p\", null, \"To make sure your operating system redirect \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"obsidian://\"), \" URIs to the Obsidian app, there may be additional steps you need to perform.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"On Windows, running the app once should be sufficient. This will register for the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"obsidian://\"), \" custom protocol handler in the Windows registry.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"On MacOS, running the app once should be sufficient, however, your app \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"must\"), \" be installer version 0.8.12 or later.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"On Linux, there's a much more involved process:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"First, ensure you create a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"obsidian.desktop\"), \" file. \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://developer.gnome.org/integration-guide/stable/desktop-files.html.en\"\n  }, \"See here for details\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ensure that your desktop file specifies the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Exec\"), \" field as \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Exec=executable %u\"), \". The \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"%u\"), \" is used to pass the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"obsidian://\"), \" URIs to the app.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If you're using the AppImage installer, you may have to unpack it using \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Obsidian-x.y.z.AppImage --appimage-extract\"), \". Then make sure the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Exec\"), \" directive points to the unpacked executable.\")))), mdx(\"h2\", {\n    \"id\": \"using-obsidian-uris\"\n  }, \"Using Obsidian URIs\"), mdx(\"p\", null, \"Obsidian URIs are typically in this format:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"obsidian://action?param1=value&param2=value\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"action\"), \" is usually the action that you would like to perform.\")), mdx(\"h3\", {\n    \"id\": \"encoding\"\n  }, \"Encoding\"), mdx(\"p\", null, \"==Important==\"), mdx(\"p\", null, \"Ensure that your values are properly URI encoded. For example, forward slash characters \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/\"), \" must be encoded as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"%2F\"), \" and space characters must be encoded as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"%20\"), \".\"), mdx(\"p\", null, \"This is especially important because an improperly encoded \\\"reserved\\\" character may break the interpretation of the URI. \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Percent-encoding\"\n  }, \"See here for details\")), mdx(\"h3\", {\n    \"id\": \"available-actions\"\n  }, \"Available actions\"), mdx(\"h4\", {\n    \"id\": \"action-open\"\n  }, \"Action \", mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"open\")), mdx(\"p\", null, \"Description: Opens an Obsidian vault, and possibly open a file within that vault.\"), mdx(\"p\", null, \"Possible parameters:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"vault\"), \" can be either the vault name, or the vault ID.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The vault name is simply the name of the vault folder.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The vault ID is the random 16-character code assigned to the vault. This ID is unique per folder on your computer. Example: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ef6ca3e3b524d22f\"), \". There isn't an easy way to find this ID yet, one will be offered at a later date in the vault switcher. Currently it can be found in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"%appdata%/obsidian/obsidian.json\"), \" for Windows. For MacOS, replace \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"%appdata%\"), \" with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"~/Library/Application Support/\"), \". For Linux, replace \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"%appdata%\"), \" with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"~/.config/\"), \".\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"file\"), \" can be either a file name, or a path from the vault root to the specified file.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"To resolve the target file, Obsidian uses the same link resolution system as a regular \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[[wikilink]]\"), \" within the vault.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If the file extension is \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"md\"), \", the extension can be omitted.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"path\"), \" an absolute file system path to a file.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Using this parameter will override both \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"vault\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"file\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This will cause the app to search for the most specific vault which contains the specified file path.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Then the rest of the path replaces the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"file\"), \" parameter.\")))), mdx(\"p\", null, \"Examples:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"obsidian://open?vault=my%20vault\"), \"\\nThis opens the vault \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"my vault\"), \". If the vault is already open, focus on the window.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"obsidian://open?vault=ef6ca3e3b524d22f\"), \"\\nThis opens the vault identified by the ID \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ef6ca3e3b524d22f\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"obsidian://open?vault=my%20vault&file=my%20note\"), \"\\nThis opens the note \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"my note\"), \" in the vault \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"my vault\"), \", assuming \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"my note\"), \" exists and the file is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"my note.md\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"obsidian://open?vault=my%20vault&file=my%20note.md\"), \"\\nThis also opens the note \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"my note\"), \" in the vault \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"my vault\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"obsidian://open?vault=my%20vault&file=path%2Fto%2Fmy%20note\"), \"\\nThis opens the note located at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"path/to/my note\"), \" in the vault \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"my vault\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"obsidian://open?path=%2Fhome%2Fuser%2Fmy%20vault%2Fpath%2Fto%2Fmy%20note\"), \"\\nThis will look for any vault that contains the path \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/home/user/my vault/path/to/my note\"), \". Then, the rest of the path is passed to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"file\"), \" parameter. For example, if a vault exists at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/home/user/my vault\"), \", then this would be equivalent to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"file\"), \" parameter set to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"path/to/my note\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"obsidian://open?path=D%3A%5CDocuments%5CMy%20vault%5CMy%20note\"), \"\\nThis will look for any vault that contains the path \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"D:\\\\Documents\\\\My vault\\\\My note\"), \". Then, the rest of the path is passed to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"file\"), \" parameter. For example, if a vault exists at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"D:\\\\Documents\\\\My vault\"), \", then this would be equivalent to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"file\"), \" parameter set to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"My note\"), \".\"))), mdx(\"h4\", {\n    \"id\": \"action-search\"\n  }, \"Action \", mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"search\")), mdx(\"p\", null, \"Description: Opens the search pane for a vault, and optionally perform a search query.\"), mdx(\"p\", null, \"Possible parameters:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"vault\"), \" can be either the vault name, or the vault ID. Same as action \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"open\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"query\"), \" (optional) The search query to perform.\")), mdx(\"p\", null, \"Examples:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"obsidian://search?vault=my%20vault\"), \"\\nThis opens the vault \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"my vault\"), \", and opens the search pane.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"obsidian://search?vault=my%20vault&query=MOC\"), \"\\nThis opens the vault \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"my vault\"), \", opens the search pane, and performs a search for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MOC\"), \".\"))), mdx(\"h4\", {\n    \"id\": \"action-new\"\n  }, \"Action \", mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"new\")), mdx(\"p\", null, \"Description: Creates a new note in the vault, optionally with some content.\"), mdx(\"p\", null, \"Possible parameters:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"vault\"), \" can be either the vault name, or the vault ID. Same as action \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"open\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"name\"), \" the file name to be created. If this is specified, the file location will be chosen based on your \\\"Default location for new notes\\\" preferences.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"file\"), \" a vault absolute path, including the name. Will override \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"name\"), \" if specified.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"path\"), \" a globally absolute path. Works similar to the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"path\"), \" option in the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"open\"), \" action, which will override both \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"vault\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"file\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"content\"), \" (optional) the contents of the note.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"silent\"), \" (optional) set this if you don't want to open the new note.\")), mdx(\"p\", null, \"Examples:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"obsidian://new?vault=my%20vault&name=my%20note\"), \"\\nThis opens the vault \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"my vault\"), \", and creates a new note called \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"my note\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"obsidian://new?vault=my%20vault&path=path%2Fto%2Fmy%20note\"), \"\\nThis opens the vault \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"my vault\"), \", and creates a new note at \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"path/to/my note\"), \".\")), mdx(\"h4\", {\n    \"id\": \"action-hook-get-address\"\n  }, \"Action \", mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"hook-get-address\")), mdx(\"p\", null, \"Description: Endpoint for use with \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://hookproductivity.com/\"\n  }, \"Hook\"), \". Copies a markdown link of the current focused note to the clipboard, as an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"obsidian://open\"), \" URL. Use: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"obsidian://hook-get-address\")), mdx(\"p\", null, \"Possible parameters:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"vault\"), \" (optional) can be either the vault name, or the vault ID. If not provided, the current or last focused vault will be used.\")), mdx(\"h2\", {\n    \"id\": \"shorthand-formats\"\n  }, \"Shorthand formats\"), mdx(\"p\", null, \"In addition to the formats above, there are two more \\\"shorthand\\\" formats available to open vaults and files:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"obsidian://vault/my vault/my note\"), \" is equivalent to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"obsidian://open?vault=my%20vault&file=my%20note\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"obsidian:///absolute/path/to/my note\"), \" is equivalent to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"obsidian://open?path=%2Fabsolute%2Fpath%2Fto%2Fmy%20note\"))));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/Advanced topics/Using obsidian URI/","title":"Using Obsidian URI","shouldShowTitle":true}}],"inboundReferences":[{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"obsidian-for-android\"\n  }, \"Obsidian for Android\"), mdx(\"p\", null, \"See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Obsidian/Android%20app/\",\n    \"title\": \"Android app\"\n  }, \"Android app\"), \".\"), mdx(\"h1\", {\n    \"id\": \"obsidian-for-ios\"\n  }, \"Obsidian for iOS\"), mdx(\"p\", null, \"See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Obsidian/iOS%20app/\",\n    \"title\": \"iOS app\"\n  }, \"iOS app\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/Obsidian/Obsidian Mobile/","title":"Obsidian for Android"}}]},"tagsOutbound":{"nodes":[]}},"pageContext":{"tags":[],"slug":"/Obsidian/iOS app/","sidebarItems":[{"title":"Categories","items":[{"title":"Advanced Topics","url":"","items":[{"title":"Accepted File Formats","url":"/Advanced topics/Accepted file formats/","items":[]},{"title":"Contributing to Obsidian","url":"/Advanced topics/Contributing to Obsidian/","items":[]},{"title":"Customizing CSS","url":"/Advanced topics/Customizing CSS/","items":[]},{"title":"Deleting Files","url":"/Advanced topics/Deleting files/","items":[]},{"title":"Drag and Drop","url":"/Advanced topics/Drag and Drop/","items":[]},{"title":"How Obsidian Stores Data","url":"/Advanced topics/How Obsidian stores data/","items":[]},{"title":"HTML Sanitization","url":"/Advanced topics/HTML sanitization/","items":[]},{"title":"Insider Builds","url":"/Advanced topics/Insider builds/","items":[]},{"title":"Third-Party Plugins","url":"/Advanced topics/Third-party plugins/","items":[]},{"title":"Using Obsidian URI","url":"/Advanced topics/Using obsidian URI/","items":[]},{"title":"YAML Front Matter","url":"/Advanced topics/YAML front matter/","items":[]}]},{"title":"Attachments","url":"","items":[{"title":"Slides Demo","url":"/Attachments/Slides demo/","items":[]}]},{"title":"Brain Dam: Keeping information","url":"/","items":[]},{"title":"Customization","url":"","items":[{"title":"Appearance","url":"/Customization/Appearance/","items":[]},{"title":"Custom Hotkeys","url":"/Customization/Custom hotkeys/","items":[]}]},{"title":"How To","url":"","items":[{"title":"Add Aliases to Note","url":"/How to/Add aliases to note/","items":[]},{"title":"Add Custom Styles","url":"/How to/Add custom styles/","items":[]},{"title":"Basic Note Taking","url":"/How to/Basic note taking/","items":[]},{"title":"Capture Information","url":"/How to/Capture information/","items":[]},{"title":"Change Settings","url":"/How to/Change settings/","items":[]},{"title":"Create Notes","url":"/How to/Create notes/","items":[]},{"title":"Embed Files","url":"/How to/Embed files/","items":[]},{"title":"Folding","url":"/How to/Folding/","items":[]},{"title":"Import Data","url":"/How to/Import data/","items":[]},{"title":"Internal Link","url":"/How to/Internal link/","items":[]},{"title":"Keyboard Shortcuts","url":"/How to/Keyboard shortcuts/","items":[]},{"title":"Link to Blocks","url":"/How to/Link to blocks/","items":[]},{"title":"Manage Attachments","url":"/How to/Manage attachments/","items":[]},{"title":"Preview and Edit Modes","url":"/How to/Preview and edit modes/","items":[]},{"title":"Rename Notes","url":"/How to/Rename notes/","items":[]},{"title":"This is a heading 1","url":"/How to/Format your notes/","items":[]},{"title":"Update Obsidian","url":"/How to/Update Obsidian/","items":[]},{"title":"Working with Backlinks","url":"/How to/Working with backlinks/","items":[]},{"title":"Working with Multiple Cursors","url":"/How to/Working with multiple cursors/","items":[]},{"title":"Working with Multiple Notes","url":"/How to/Working with multiple notes/","items":[]},{"title":"Working with Multiple Vaults","url":"/How to/Working with multiple vaults/","items":[]},{"title":"Working with Tags","url":"/How to/Working with tags/","items":[]}]},{"title":"Licenses & Add-on Services","url":"","items":[{"title":"Catalyst License","url":"/Licenses & add-on services/Catalyst license/","items":[]},{"title":"Commercial License","url":"/Licenses & add-on services/Commercial license/","items":[]},{"title":"Obsidian Publish","url":"/Licenses & add-on services/Obsidian Publish/","items":[]},{"title":"Obsidian Sync","url":"/Licenses & add-on services/Obsidian Sync/","items":[]},{"title":"Obsidian Unlimited","url":"/Licenses & add-on services/Obsidian Unlimited/","items":[]},{"title":"Refund Policy","url":"/Licenses & add-on services/Refund policy/","items":[]}]},{"title":"Obsidian","url":"/Obsidian/","items":[{"title":"Android App","url":"/Obsidian/Android app/","items":[]},{"title":"Credits","url":"/Obsidian/Credits/","items":[]},{"title":"iOS App","url":"/Obsidian/iOS app/","items":[]},{"title":"Mobile App Beta","url":"/Obsidian/Mobile app beta/","items":[]},{"title":"Obsidian","url":"/Obsidian/Obsidian/","items":[]},{"title":"Obsidian for Android","url":"/Obsidian/Obsidian Mobile/","items":[]}]},{"title":"Panes","url":"","items":[{"title":"Linked Pane","url":"/Panes/Linked pane/","items":[]},{"title":"Pane Layout","url":"/Panes/Pane layout/","items":[]}]},{"title":"Plugins","url":"","items":[{"title":"Audio Recorder","url":"/Plugins/Audio recorder/","items":[]},{"title":"Backlinks","url":"/Plugins/Backlinks/","items":[]},{"title":"Command Palette","url":"/Plugins/Command palette/","items":[]},{"title":"Daily Notes","url":"/Plugins/Daily notes/","items":[]},{"title":"File Explorer","url":"/Plugins/File explorer/","items":[]},{"title":"File Recovery","url":"/Plugins/File recovery/","items":[]},{"title":"Graph View","url":"/Plugins/Graph view/","items":[]},{"title":"List of Plugins","url":"/Plugins/List of plugins/","items":[]},{"title":"Markdown Format Converter","url":"/Plugins/Markdown format converter/","items":[]},{"title":"Note Composer","url":"/Plugins/Note composer/","items":[]},{"title":"Open in Default App","url":"/Plugins/Open in default app/","items":[]},{"title":"Outgoing Links","url":"/Plugins/Outgoing links/","items":[]},{"title":"Outline","url":"/Plugins/Outline/","items":[]},{"title":"Page Preview","url":"/Plugins/Page preview/","items":[]},{"title":"Publish","url":"/Plugins/Publish/","items":[]},{"title":"Quick Switcher","url":"/Plugins/Quick switcher/","items":[]},{"title":"Random Note","url":"/Plugins/Random note/","items":[]},{"title":"Search","url":"/Plugins/Search/","items":[]},{"title":"Slides","url":"/Plugins/Slides/","items":[]},{"title":"Starred Notes","url":"/Plugins/Starred notes/","items":[]},{"title":"Tag Pane","url":"/Plugins/Tag pane/","items":[]},{"title":"Templates","url":"/Plugins/Templates/","items":[]},{"title":"Word Count","url":"/Plugins/Word count/","items":[]},{"title":"Workspaces","url":"/Plugins/Workspaces/","items":[]},{"title":"Zettelkasten Prefixer","url":"/Plugins/Zettelkasten prefixer/","items":[]}]},{"title":"Start Here","url":"/Start here/","items":[]}]}],"tagsGroups":[],"latestPosts":[{"fields":{"slug":"/","title":"Brain Dam: Keeping information","lastUpdatedAt":"2022-02-01T19:30:12.000Z","lastUpdated":"2/1/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/How to/Embed files/","title":"Embed Files","lastUpdatedAt":"2021-09-03T06:27:46.000Z","lastUpdated":"9/3/2021"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/How to/Format your notes/","title":"This is a heading 1","lastUpdatedAt":"2021-09-03T06:27:46.000Z","lastUpdated":"9/3/2021"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Plugins/Search/","title":"Search","lastUpdatedAt":"2021-09-03T06:25:50.000Z","lastUpdated":"9/3/2021"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Start here/","title":"Start Here","lastUpdatedAt":"2021-09-01T22:25:52.000Z","lastUpdated":"9/1/2021"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Advanced topics/Accepted file formats/","title":"Accepted File Formats","lastUpdatedAt":"2021-09-01T22:25:52.000Z","lastUpdated":"9/1/2021"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Advanced topics/Contributing to Obsidian/","title":"Contributing to Obsidian","lastUpdatedAt":"2021-09-01T22:25:52.000Z","lastUpdated":"9/1/2021"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Advanced topics/Deleting files/","title":"Deleting Files","lastUpdatedAt":"2021-09-01T22:25:52.000Z","lastUpdated":"9/1/2021"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Advanced topics/Customizing CSS/","title":"Customizing CSS","lastUpdatedAt":"2021-09-01T22:25:52.000Z","lastUpdated":"9/1/2021"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Advanced topics/Drag and Drop/","title":"Drag and Drop","lastUpdatedAt":"2021-09-01T22:25:52.000Z","lastUpdated":"9/1/2021"},"frontmatter":{"draft":false,"tags":[]}}]}},
    "staticQueryHashes": ["2230547434","2320115945","3495835395","451533639"]}