{
    "componentChunkName": "component---node-modules-gatsby-theme-primer-wiki-src-templates-post-query-js",
    "path": "/Python/Dictionary/",
    "result": {"data":{"mdx":{"id":"38996f7a-a7e1-5f1a-8e27-87aec9003d57","tableOfContents":{},"fields":{"title":"Dictionary","slug":"/Python/Dictionary/","url":"https://thomassajot.github.io/brain-dam/brain-dam/Python/Dictionary/","editUrl":"https://github.com/thomassajot/brain-dam/tree/main/Python/Dictionary.md","lastUpdatedAt":"2022-02-03T13:24:53.000Z","lastUpdated":"2/3/2022","gitCreatedAt":"2022-02-03T13:24:53.000Z","shouldShowTitle":true},"frontmatter":{"title":"","description":null,"imageAlt":null,"tags":[],"date":null,"dateModified":null,"language":null,"seoTitle":null,"image":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"See Blob post about CPython implementation of Dict: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.laurentluce.com/posts/python-dictionary-implementation/\"\n  }, \"https://www.laurentluce.com/posts/python-dictionary-implementation/\"), mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"And original docstring comment in CPython code: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/python/cpython/blob/main/Objects/dictobject.c\"\n  }, \"https://github.com/python/cpython/blob/main/Objects/dictobject.c\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"class Dict:\\n\\n    def __init__(self, size=100):\\n        self.storage = [list() for _ in range(size)]\\n        self.size = size\\n        self.length = 0\\n    \\n    def __setitem__(self, key, value):\\n        key_pos = self._get_pos(key)\\n        for pairs in self.storage[key_pos]:\\n            if key == pairs[0]:\\n                # update existing key with new value\\n                pairs[1] = value\\n                break\\n        else:\\n            self.storage[key_pos].append([key, value])\\n            self.length += 1\\n\\n    def __getitem__(self, key):\\n        key_pos = self._get_pos(key)\\n            for pairs in self.storage[key_pos]:\\n                if key == pairs[0]:\\n                    return pairs[1]\\n        raise KeyError(f'Key {key} does not exists.')\\n    \\n      \\n    \\n    def __delitem__(self, key):\\n        key_pos = self._get_pos(key)\\n        idx_to_remove = None\\n        for idx, pairs in enumerate(self.storage[key_pos]):\\n            if key == pairs[0]:\\n                idx_to_remove = idx\\n                break\\n        else:\\n            raise KeyError()\\n\\n        del self.storage[key_pos][idx_to_remove]        \\n        self.length -=1\\n    \\n      \\n    \\n    def __len__(self):\\n        return self.length\\n    \\n    def __contains__(self, key):\\n        key_pos = self._get_pos(key)\\n        for pairs in self.storage[key_pos]:\\n            if key == pairs:\\n                return True\\n        return False\\n        \\n    def __iter__(self):\\n        for k, v in self.items():\\n            yield k\\n    \\n    def keys(self):\\n        return self.__iter__()\\n    \\n    def values(self):\\n        for k, v in self.items():\\n            yield v\\n    \\n    def items(self):\\n        for pairs in self.storage:\\n            for pair in pairs:\\n                yield pair\\n\\n    def get(self, key, default=None):\\n        try:\\n            return self[key]\\n        except KeyError:\\n            return default\\n    \\n    def _get_pos(self, key):\\n        return hash(key) % self.size\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"See Blob post about CPython implementation of Dict: https://www.laurentluce.com/posts/python-dictionary-implementation/  \nAnd original docstring comment in CPython code: https://github.com/python/cpython/blob/main/Objects/dictobject.c\n\n```python\nclass Dict:\n\n\tdef __init__(self, size=100):\n\t\tself.storage = [list() for _ in range(size)]\n\t\tself.size = size\n\t\tself.length = 0\n\t\n\tdef __setitem__(self, key, value):\n\t\tkey_pos = self._get_pos(key)\n\t\tfor pairs in self.storage[key_pos]:\n\t\t\tif key == pairs[0]:\n\t\t\t\t# update existing key with new value\n\t\t\t\tpairs[1] = value\n\t\t\t\tbreak\n\t\telse:\n\t\t\tself.storage[key_pos].append([key, value])\n\t\t\tself.length += 1\n\n\tdef __getitem__(self, key):\n\t\tkey_pos = self._get_pos(key)\n\t\t\tfor pairs in self.storage[key_pos]:\n\t\t\t\tif key == pairs[0]:\n\t\t\t\t\treturn pairs[1]\n\t\traise KeyError(f'Key {key} does not exists.')\n\t\n\t  \n\t\n\tdef __delitem__(self, key):\n\t\tkey_pos = self._get_pos(key)\n\t\tidx_to_remove = None\n\t\tfor idx, pairs in enumerate(self.storage[key_pos]):\n\t\t\tif key == pairs[0]:\n\t\t\t\tidx_to_remove = idx\n\t\t\t\tbreak\n\t\telse:\n\t\t\traise KeyError()\n\n\t\tdel self.storage[key_pos][idx_to_remove]\t\t\n\t\tself.length -=1\n\t\n\t  \n\t\n\tdef __len__(self):\n\t\treturn self.length\n\t\n\tdef __contains__(self, key):\n\t\tkey_pos = self._get_pos(key)\n\t\tfor pairs in self.storage[key_pos]:\n\t\t\tif key == pairs:\n\t\t\t\treturn True\n\t\treturn False\n\t\t\n\tdef __iter__(self):\n\t\tfor k, v in self.items():\n\t\t\tyield k\n\t\n\tdef keys(self):\n\t\treturn self.__iter__()\n\t\n\tdef values(self):\n\t\tfor k, v in self.items():\n\t\t\tyield v\n\t\n\tdef items(self):\n\t\tfor pairs in self.storage:\n\t\t\tfor pair in pairs:\n\t\t\t\tyield pair\n\n\tdef get(self, key, default=None):\n\t\ttry:\n\t\t\treturn self[key]\n\t\texcept KeyError:\n\t\t\treturn default\n\t\n\tdef _get_pos(self, key):\n\t\treturn hash(key) % self.size\n```","excerpt":"See Blob post about CPython implementation of Dict:  https://www.laurentluce.com/posts/python-dictionary-implementation/ And original docstâ€¦","outboundReferences":[],"inboundReferences":[]},"tagsOutbound":{"nodes":[]}},"pageContext":{"tags":[],"slug":"/Python/Dictionary/","sidebarItems":[{"title":"Categories","items":[{"title":"Azure","url":"","items":[{"title":"Azure Pipeline","url":"/Azure/Azure pipeline/","items":[]},{"title":"Documentation","url":"/Azure/Azure-ml/","items":[]}]},{"title":"Books","url":"","items":[{"title":"All of Statistics - Larry - Unfinished","url":"","items":[{"title":"Exercices","url":"/books/All of Statistics - Larry - Unfinished/Chapter 1/","items":[]}]},{"title":"Design Data Intensive Apps","url":"","items":[{"title":"Ch 5 Replication","url":"/books/Design Data Intensive Apps/Ch 5 Replication/","items":[]},{"title":"Formats for Encoding Data","url":"/books/Design Data Intensive Apps/Ch 4 Encoding and Evolution/","items":[]},{"title":"Hello world","url":"/books/Design Data Intensive Apps/test slides/","items":[]}]}]},{"title":"Brain Dam","url":"/","items":[]},{"title":"Courses","url":"","items":[{"title":"AlgoExpert","url":"","items":[{"title":"Design Facebook News Feed","url":"/Courses/AlgoExpert/Algo Expert - System Design interview/","items":[]},{"title":"General tips","url":"/Courses/AlgoExpert/Algo Expert - Behavioral interview/","items":[]}]},{"title":"Coursera","url":"","items":[{"title":"Learning How to Learn","url":"","items":[{"title":"Chunking","url":"/Courses/Coursera/Learning how to learn/Chunking/","items":[]},{"title":"Einstellung","url":"/Courses/Coursera/Learning how to learn/Einstellung/","items":[]},{"title":"Habits","url":"/Courses/Coursera/Learning how to learn/Habits/","items":[]},{"title":"Illusion of Competence","url":"/Courses/Coursera/Learning how to learn/Illusion of Competence/","items":[]},{"title":"Imposter Syndrome","url":"/Courses/Coursera/Learning how to learn/Imposter syndrome/","items":[]},{"title":"Overlearning","url":"/Courses/Coursera/Learning how to learn/Overlearning/","items":[]},{"title":"Procrastination","url":"/Courses/Coursera/Learning how to learn/Procrastination/","items":[]},{"title":"Tasks Lists","url":"/Courses/Coursera/Learning how to learn/Tasks lists/","items":[]},{"title":"Week 1","url":"/Courses/Coursera/Learning how to learn/Coursera - Learning How to Learn/","items":[]}]}]},{"title":"Educative","url":"","items":[{"title":"Example: Video Recommendation","url":"/Courses/Educative/Machine Learning System Design/","items":[]}]},{"title":"Meta - Field Guide to ML","url":"","items":[{"title":"Introduction","url":"/Courses/Meta - field guide to ML/Field guide to ML/","items":[]}]}]},{"title":"Engineering","url":"","items":[{"title":"ACID","url":"/Engineering/Relational Databases/","items":[]},{"title":"API Design","url":"/Engineering/API Design/","items":[]},{"title":"Blob Store","url":"/Engineering/Specialized Storage Paradigms/","items":[]},{"title":"Cache for read","url":"/Engineering/Caching/","items":[]},{"title":"Client-Server Model","url":"/Engineering/Client-Server Model/","items":[]},{"title":"Configuration","url":"/Engineering/Configuration/","items":[]},{"title":"Consistent hashing with bounded load","url":"/Engineering/Consistent hashing/","items":[]},{"title":"Design Documents","url":"/Engineering/Design Documents/","items":[]},{"title":"Distributed Hash Table","url":"/Engineering/Distributed Hash Table/","items":[]},{"title":"Encryption","url":"/Engineering/Security and HTTPS/","items":[]},{"title":"Etcd","url":"/Engineering/Etcd/","items":[]},{"title":"Feature Flags","url":"/Engineering/Feature Flags/","items":[]},{"title":"Forward Proxy","url":"/Engineering/Proxies/","items":[]},{"title":"How does the load balancer work ?","url":"/Engineering/Load Balancer/","items":[]},{"title":"How to implement Leader election for your service ?","url":"/Engineering/Leader Election/","items":[]},{"title":"Idempotent Operation","url":"/Engineering/Idempotent Operation/","items":[]},{"title":"Important points","url":"/Engineering/MapReduce/","items":[]},{"title":"Latency","url":"/Engineering/Latency and Throughput/","items":[]},{"title":"Logging","url":"/Engineering/Logging and Monitoring/","items":[]},{"title":"Other strategy","url":"/Engineering/Jump hashing/","items":[]},{"title":"Other strategy","url":"/Engineering/Rendez-vous Hashing/","items":[]},{"title":"Polling","url":"/Engineering/Polling and Streaming/","items":[]},{"title":"Prometheus","url":"/Engineering/Prometheus/","items":[]},{"title":"Redis","url":"/Engineering/Redis/","items":[]},{"title":"Replication","url":"/Engineering/Replication/","items":[]},{"title":"Sharding or Partitioning","url":"/Engineering/Sharding or Partitioning/","items":[]},{"title":"SLA / SLO","url":"/Engineering/Availability/","items":[]},{"title":"Socket","url":"/Engineering/Socket/","items":[]},{"title":"Storage Concept","url":"/Engineering/Storage concept/","items":[]},{"title":"Tools","url":"/Engineering/Key-Value Stores/","items":[]},{"title":"Tools","url":"/Engineering/Peer-To-Peer Networks/","items":[]},{"title":"Tools","url":"/Engineering/Publish-Subscribe Pattern/","items":[]},{"title":"Tools","url":"/Engineering/Rate Limiting/","items":[]},{"title":"Zookeeper","url":"/Engineering/Zookeeper/","items":[]}]},{"title":"Finance","url":"","items":[{"title":"Growth shares","url":"/Finance/Growth Shares/","items":[]}]},{"title":"ML","url":"","items":[{"title":"Constrained Optimization","url":"/ML/Constrained optimization/","items":[]},{"title":"Coordinate Descent","url":"/ML/Coordinate descent/","items":[]},{"title":"Determinant","url":"/ML/Determinant/","items":[]},{"title":"Dirichlet Distribution","url":"/ML/Dirichlet distribution/","items":[]},{"title":"Eigendecomposition","url":"/ML/Eigendecomposition/","items":[]},{"title":"Exploitation vs exploration","url":"/ML/Multi-armed bandit (AB testing)/","items":[]},{"title":"Feature Hashing","url":"/ML/Feature hashing/","items":[]},{"title":"Frequentist A/B testing","url":"/ML/Frequentist AB testing/","items":[]},{"title":"Gradient","url":"/ML/Gradient/","items":[]},{"title":"Gradient Descend","url":"/ML/Gradient Descend/","items":[]},{"title":"Graph Neural Network","url":"/ML/GNN/","items":[]},{"title":"Hessian","url":"/ML/Hessian/","items":[]},{"title":"Jacobian","url":"/ML/Jacobian/","items":[]},{"title":"Kernel Trick","url":"/ML/Kernel Trick/","items":[]},{"title":"KKT conditions","url":"/ML/KKT/","items":[]},{"title":"Line Search","url":"/ML/Line Search/","items":[]},{"title":"Links","url":"/ML/Latent Dirichlet Allocation/","items":[]},{"title":"Maths","url":"/ML/PCA/","items":[]},{"title":"Matrix Inverse","url":"/ML/Matrix inverse/","items":[]},{"title":"Moore-Penrose Pseudoinverse","url":"/ML/Moore-Penrose Pseudoinverse/","items":[]},{"title":"Named Entity Recognition (NER)","url":"/ML/Named Entity Recognition (NER)/","items":[]},{"title":"Newton's Method","url":"/ML/Newton's method/","items":[]},{"title":"Norms","url":"/ML/Norms/","items":[]},{"title":"Oversampling","url":"/ML/Handle Imablanced datasets/","items":[]},{"title":"Overview","url":"/ML/RANSAC/","items":[]},{"title":"Parameter Estimation","url":"/ML/Parameter estimation/","items":[]},{"title":"Positive Definite Matrix","url":"/ML/Positive Definite Matrix/","items":[]},{"title":"Regression Losses","url":"/ML/Regression losses/","items":[]},{"title":"Singular Value Decomposition (SVD)","url":"/ML/Singular Value Decomposition (SVD)/","items":[]},{"title":"Symmetric Matrix","url":"/ML/Symmetric matrix/","items":[]},{"title":"The ultimate understanding of the Naive Bayes Classifier, version 8","url":"/ML/Naive Bayes Classifier/","items":[]},{"title":"Thompson Sampling","url":"/ML/Thompson Sampling/","items":[]},{"title":"Tool","url":"/ML/Bayesian AB testing/","items":[]},{"title":"Trace of Matrix","url":"/ML/Trace of matrix/","items":[]},{"title":"Trust Region","url":"/ML/trust region/","items":[]},{"title":"Variance and Standard Error","url":"/ML/Variance and Standard error/","items":[]}]},{"title":"Papers","url":"","items":[{"title":"Questions","url":"/Papers/VICREG  variance-invariance-covariance regulaization for self-supervised Learning/","items":[]}]},{"title":"Programming","url":"","items":[{"title":"A- What is Dynamic Programming?","url":"/Programming/Dynamic Programming/","items":[]},{"title":"Example problem: Min Rewards (hard pb)","url":"/Programming/Peak and Valleys/","items":[]},{"title":"Quicksort","url":"/Programming/Quicksort/","items":[]}]},{"title":"Python","url":"","items":[{"title":"Dictionary","url":"/Python/Dictionary/","items":[]},{"title":"Is Python Compiled or Interpreted Language","url":"/Python/Is Python Compiled or Interpreted language/","items":[]},{"title":"Pkg Manager","url":"","items":[{"title":"Main Commands","url":"/Python/pkg manager/Conda/","items":[]},{"title":"Mamba","url":"/Python/pkg manager/Mamba/","items":[]},{"title":"PIP","url":"/Python/pkg manager/PIP/","items":[]}]}]},{"title":"Week 1","url":"/Coursera - Learning How to Learn/","items":[]}]}],"tagsGroups":[],"latestPosts":[{"fields":{"slug":"/Engineering/Replication/","title":"Replication","lastUpdatedAt":"2022-06-02T10:26:57.000Z","lastUpdated":"6/2/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Engineering/Sharding or Partitioning/","title":"Sharding or Partitioning","lastUpdatedAt":"2022-06-02T10:26:57.000Z","lastUpdated":"6/2/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/books/All of Statistics - Larry - Unfinished/Chapter 1/","title":"Exercices","lastUpdatedAt":"2022-06-02T10:26:57.000Z","lastUpdated":"6/2/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/books/Design Data Intensive Apps/Ch 4 Encoding and Evolution/","title":"Formats for Encoding Data","lastUpdatedAt":"2022-06-02T10:26:57.000Z","lastUpdated":"6/2/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/books/Design Data Intensive Apps/Ch 5 Replication/","title":"Ch 5 Replication","lastUpdatedAt":"2022-06-02T10:26:57.000Z","lastUpdated":"6/2/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/books/Design Data Intensive Apps/test slides/","title":"Hello world","lastUpdatedAt":"2022-06-02T10:26:57.000Z","lastUpdated":"6/2/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/","title":"Brain Dam","lastUpdatedAt":"2022-05-27T09:26:10.000Z","lastUpdated":"5/27/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/ML/Determinant/","title":"Determinant","lastUpdatedAt":"2022-05-27T09:26:10.000Z","lastUpdated":"5/27/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Courses/AlgoExpert/Algo Expert - Behavioral interview/","title":"General tips","lastUpdatedAt":"2022-05-27T09:26:10.000Z","lastUpdated":"5/27/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Courses/AlgoExpert/Algo Expert - System Design interview/","title":"Design Facebook News Feed","lastUpdatedAt":"2022-05-27T09:26:10.000Z","lastUpdated":"5/27/2022"},"frontmatter":{"draft":false,"tags":[]}}]}},
    "staticQueryHashes": ["2230547434","2320115945","3495835395","451533639"]}