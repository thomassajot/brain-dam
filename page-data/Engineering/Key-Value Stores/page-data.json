{
    "componentChunkName": "component---node-modules-gatsby-theme-primer-wiki-src-templates-post-query-js",
    "path": "/Engineering/Key-Value Stores/",
    "result": {"data":{"mdx":{"id":"80f406c4-8fd1-529b-badb-c2e04b4cd30e","tableOfContents":{"items":[{"url":"#tools","title":"Tools"}]},"fields":{"title":"Tools","slug":"/Engineering/Key-Value Stores/","url":"https://thomassajot.github.io/brain-dam/brain-dam/Engineering/Key-Value Stores/","editUrl":"https://github.com/thomassajot/brain-dam/tree/main/Engineering/Key-Value Stores.md","lastUpdatedAt":"2022-05-27T09:02:01.000Z","lastUpdated":"5/27/2022","gitCreatedAt":"2022-02-03T13:24:53.000Z","shouldShowTitle":false},"frontmatter":{"title":"","description":null,"imageAlt":null,"tags":[],"date":null,"dateModified":null,"language":null,"seoTitle":null,"image":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Useful for caching or dynamic configuration.\"), mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"When you want to use a database that does not enforce relational format (in SQL).\"), mdx(\"p\", null, \"Because we are accessing value directly thoruigh keys, you can access values very fast. Usually you have lower latency and increrased throughput.\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Key\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Value\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"foo\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"9001\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"bar\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"SystemsExpert\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"baz\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1, two, 3\")))), mdx(\"h1\", {\n    \"id\": \"tools\"\n  }, \"Tools\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Engineering/Redis/\",\n    \"title\": \"Redis\"\n  }, \"Redis\"), \" (in memory storage)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dynamo DB\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Engineering/Zookeeper/\",\n    \"title\": \"ZooKeeper\"\n  }, \"ZooKeeper\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Engineering/Etcd/\",\n    \"title\": \"Etcd\"\n  }, \"Etcd\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"**Useful for caching or dynamic configuration.**  \nWhen you want to use a database that does not enforce relational format (in SQL).\n\nBecause we are accessing value directly thoruigh keys, you can access values very fast. Usually you have lower latency and increrased throughput.\n\n\n| Key | Value |\n|-----|-------|\n| foo | 9001           |\n| bar | SystemsExpert  |\n| baz | 1, two, 3      |\n\n# Tools\n- [[Redis]] (in memory storage)\n- Dynamo DB\n- [[ZooKeeper]]\n- [[Etcd]]\n","excerpt":"Useful for caching or dynamic configuration. When you want to use a database that does not enforce relational format (in SQL). Because we aâ€¦","outboundReferences":[{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This is a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Engineering/Key-Value%20Stores/\",\n    \"title\": \"Key-Value Store\"\n  }, \"Key-Value Store\"), \" that is \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Engineering/Availability/\",\n    \"title\": \"highly available\"\n  }, \"highly available\"), \" and Strongly Consistent store.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"It implements the RAFT consensus algorithm.\"), mdx(\"p\", null, \"We can use this DB to implement leader election for our servers. You have multiple servers communicating with ETCD, and at any given point in time, you have a special Key-Value pair that represents who the leader is.\"), mdx(\"p\", null, \"This is a tool like \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Engineering/Zookeeper/\",\n    \"title\": \"Zookeeper\"\n  }, \"Zookeeper\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/Engineering/Etcd/","title":"Etcd","shouldShowTitle":true}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"An In memory Key-value store. Does offer some persistent storage options but is typically used as a really fast, best-effort caching solution.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Redis is also often used to implement \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Engineering/Rate%20Limiting/\",\n    \"title\": \"Rate Limiting\"\n  }, \"Rate Limiting\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/Engineering/Redis/","title":"Redis","shouldShowTitle":true}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Zookeper is a strongly consistent, highly available \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Engineering/Key-Value%20Stores/\",\n    \"title\": \"Key-Value Stores\"\n  }, \"Key-Value Stores\"), \". It's often used to store important configuration or to perform leader election.\"), mdx(\"p\", null, \"Tool similar to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Engineering/Etcd/\",\n    \"title\": \"Etcd\"\n  }, \"Etcd\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/Engineering/Zookeeper/","title":"Zookeeper","shouldShowTitle":true}}],"inboundReferences":[{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This is a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Engineering/Key-Value%20Stores/\",\n    \"title\": \"Key-Value Store\"\n  }, \"Key-Value Store\"), \" that is \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Engineering/Availability/\",\n    \"title\": \"highly available\"\n  }, \"highly available\"), \" and Strongly Consistent store.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"It implements the RAFT consensus algorithm.\"), mdx(\"p\", null, \"We can use this DB to implement leader election for our servers. You have multiple servers communicating with ETCD, and at any given point in time, you have a special Key-Value pair that represents who the leader is.\"), mdx(\"p\", null, \"This is a tool like \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Engineering/Zookeeper/\",\n    \"title\": \"Zookeeper\"\n  }, \"Zookeeper\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/Engineering/Etcd/","title":"Etcd"}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Zookeper is a strongly consistent, highly available \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Engineering/Key-Value%20Stores/\",\n    \"title\": \"Key-Value Stores\"\n  }, \"Key-Value Stores\"), \". It's often used to store important configuration or to perform leader election.\"), mdx(\"p\", null, \"Tool similar to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Engineering/Etcd/\",\n    \"title\": \"Etcd\"\n  }, \"Etcd\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/Engineering/Zookeeper/","title":"Zookeeper"}}]},"tagsOutbound":{"nodes":[]}},"pageContext":{"tags":[],"slug":"/Engineering/Key-Value Stores/","sidebarItems":[{"title":"Categories","items":[{"title":"Azure","url":"","items":[{"title":"Azure Pipeline","url":"/Azure/Azure pipeline/","items":[]},{"title":"Documentation","url":"/Azure/Azure-ml/","items":[]}]},{"title":"Brain Dam","url":"/","items":[]},{"title":"Courses","url":"","items":[{"title":"Coursera","url":"","items":[{"title":"Learning How to Learn","url":"","items":[{"title":"Chunking","url":"/Courses/Coursera/Learning how to learn/Chunking/","items":[]},{"title":"Illusion of Competence","url":"/Courses/Coursera/Learning how to learn/Illusion of Competence/","items":[]},{"title":"Imposter Syndrome","url":"/Courses/Coursera/Learning how to learn/Imposter syndrome/","items":[]},{"title":"Overlearning","url":"/Courses/Coursera/Learning how to learn/Overlearning/","items":[]},{"title":"Procrastination","url":"/Courses/Coursera/Learning how to learn/Procrastination/","items":[]},{"title":"Tasks Lists","url":"/Courses/Coursera/Learning how to learn/Tasks lists/","items":[]}]}]}]},{"title":"Engineering","url":"","items":[{"title":"ACID","url":"/Engineering/Relational Databases/","items":[]},{"title":"API Design","url":"/Engineering/API Design/","items":[]},{"title":"Blob Store","url":"/Engineering/Specialized Storage Paradigms/","items":[]},{"title":"Cache for read","url":"/Engineering/Caching/","items":[]},{"title":"Client-Server Model","url":"/Engineering/Client-Server Model/","items":[]},{"title":"Configuration","url":"/Engineering/Configuration/","items":[]},{"title":"Consistent hashing with bounded load","url":"/Engineering/Consistent hashing/","items":[]},{"title":"Design Documents","url":"/Engineering/Design Documents/","items":[]},{"title":"Distributed Hash Table","url":"/Engineering/Distributed Hash Table/","items":[]},{"title":"Encryption","url":"/Engineering/Security and HTTPS/","items":[]},{"title":"Etcd","url":"/Engineering/Etcd/","items":[]},{"title":"Feature Flags","url":"/Engineering/Feature Flags/","items":[]},{"title":"Forward Proxy","url":"/Engineering/Proxies/","items":[]},{"title":"How does the load balancer work ?","url":"/Engineering/Load Balancer/","items":[]},{"title":"How to implement Leader election for your service ?","url":"/Engineering/Leader Election/","items":[]},{"title":"Idempotent Operation","url":"/Engineering/Idempotent Operation/","items":[]},{"title":"Important points","url":"/Engineering/MapReduce/","items":[]},{"title":"Latency","url":"/Engineering/Latency and Throughput/","items":[]},{"title":"Logging","url":"/Engineering/Logging and Monitoring/","items":[]},{"title":"Other strategy","url":"/Engineering/Jump hashing/","items":[]},{"title":"Other strategy","url":"/Engineering/Rendez-vous Hashing/","items":[]},{"title":"Polling","url":"/Engineering/Polling and Streaming/","items":[]},{"title":"Prometheus","url":"/Engineering/Prometheus/","items":[]},{"title":"Redis","url":"/Engineering/Redis/","items":[]},{"title":"Replication","url":"/Engineering/Replication and Sharding/","items":[]},{"title":"SLA / SLO","url":"/Engineering/Availability/","items":[]},{"title":"Socket","url":"/Engineering/Socket/","items":[]},{"title":"Storage Concept","url":"/Engineering/Storage concept/","items":[]},{"title":"Tools","url":"/Engineering/Key-Value Stores/","items":[]},{"title":"Tools","url":"/Engineering/Peer-To-Peer Networks/","items":[]},{"title":"Tools","url":"/Engineering/Publish-Subscribe Pattern/","items":[]},{"title":"Tools","url":"/Engineering/Rate Limiting/","items":[]},{"title":"Zookeeper","url":"/Engineering/Zookeeper/","items":[]}]},{"title":"Finance","url":"","items":[{"title":"Growth shares","url":"/Finance/Growth Shares/","items":[]}]},{"title":"ML","url":"","items":[{"title":"Constrained Optimization","url":"/ML/Constrained optimization/","items":[]},{"title":"Coordinate Descent","url":"/ML/Coordinate descent/","items":[]},{"title":"Determinant","url":"/ML/Determinant/","items":[]},{"title":"Dirichlet Distribution","url":"/ML/Dirichlet distribution/","items":[]},{"title":"Eigendecomposition","url":"/ML/Eigendecomposition/","items":[]},{"title":"Exploitation vs exploration","url":"/ML/Multi-armed bandit (AB testing)/","items":[]},{"title":"Feature Hashing","url":"/ML/Feature hashing/","items":[]},{"title":"Frequentist A/B testing","url":"/ML/Frequentist AB testing/","items":[]},{"title":"Gradient","url":"/ML/Gradient/","items":[]},{"title":"Gradient Descend","url":"/ML/Gradient Descend/","items":[]},{"title":"Graph Neural Network","url":"/ML/GNN/","items":[]},{"title":"Hessian","url":"/ML/Hessian/","items":[]},{"title":"Jacobian","url":"/ML/Jacobian/","items":[]},{"title":"Kernel Trick","url":"/ML/Kernel Trick/","items":[]},{"title":"KKT conditions","url":"/ML/KKT/","items":[]},{"title":"Line Search","url":"/ML/Line Search/","items":[]},{"title":"Links","url":"/ML/Latent Dirichlet Allocation/","items":[]},{"title":"Maths","url":"/ML/PCA/","items":[]},{"title":"Matrix Inverse","url":"/ML/Matrix inverse/","items":[]},{"title":"Moore-Penrose Pseudoinverse","url":"/ML/Moore-Penrose Pseudoinverse/","items":[]},{"title":"Named Entity Recognition (NER)","url":"/ML/Named Entity Recognition (NER)/","items":[]},{"title":"Newton's Method","url":"/ML/Newton's method/","items":[]},{"title":"Norms","url":"/ML/Norms/","items":[]},{"title":"Oversampling","url":"/ML/Handle Imablanced datasets/","items":[]},{"title":"Overview","url":"/ML/RANSAC/","items":[]},{"title":"Parameter Estimation","url":"/ML/Parameter estimation/","items":[]},{"title":"Positive Definite Matrix","url":"/ML/Positive Definite Matrix/","items":[]},{"title":"Regression Losses","url":"/ML/Regression losses/","items":[]},{"title":"Singular Value Decomposition (SVD)","url":"/ML/Singular Value Decomposition (SVD)/","items":[]},{"title":"Symmetric Matrix","url":"/ML/Symmetric matrix/","items":[]},{"title":"The ultimate understanding of the Naive Bayes Classifier, version 8","url":"/ML/Naive Bayes Classifier/","items":[]},{"title":"Thompson Sampling","url":"/ML/Thompson Sampling/","items":[]},{"title":"Tool","url":"/ML/Bayesian AB testing/","items":[]},{"title":"Trace of Matrix","url":"/ML/Trace of matrix/","items":[]},{"title":"Trust Region","url":"/ML/trust region/","items":[]},{"title":"Variance and Standard Error","url":"/ML/Variance and Standard error/","items":[]}]},{"title":"Papers","url":"","items":[{"title":"Questions","url":"/Papers/VICREG  variance-invariance-covariance regulaization for self-supervised Learning/","items":[]}]},{"title":"Programming","url":"","items":[{"title":"A- What is Dynamic Programming?","url":"/Programming/Dynamic Programming/","items":[]},{"title":"Example problem: Min Rewards (hard pb)","url":"/Programming/Peak and Valleys/","items":[]},{"title":"Quicksort","url":"/Programming/Quicksort/","items":[]}]},{"title":"Python","url":"","items":[{"title":"Dictionary","url":"/Python/Dictionary/","items":[]},{"title":"Is Python Compiled or Interpreted Language","url":"/Python/Is Python Compiled or Interpreted language/","items":[]}]},{"title":"Start Here","url":"/Start here/","items":[]},{"title":"Week 1","url":"/Coursera - Learning How to Learn/","items":[]}]}],"tagsGroups":[],"latestPosts":[{"fields":{"slug":"/Programming/Quicksort/","title":"Quicksort","lastUpdatedAt":"2022-05-27T09:02:01.000Z","lastUpdated":"5/27/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Courses/Coursera/Learning how to learn/Chunking/","title":"Chunking","lastUpdatedAt":"2022-05-27T09:02:01.000Z","lastUpdated":"5/27/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Courses/Coursera/Learning how to learn/Illusion of Competence/","title":"Illusion of Competence","lastUpdatedAt":"2022-05-27T09:02:01.000Z","lastUpdated":"5/27/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Courses/Coursera/Learning how to learn/Imposter syndrome/","title":"Imposter Syndrome","lastUpdatedAt":"2022-05-27T09:02:01.000Z","lastUpdated":"5/27/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Courses/Coursera/Learning how to learn/Overlearning/","title":"Overlearning","lastUpdatedAt":"2022-05-27T09:02:01.000Z","lastUpdated":"5/27/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Courses/Coursera/Learning how to learn/Procrastination/","title":"Procrastination","lastUpdatedAt":"2022-05-27T09:02:01.000Z","lastUpdated":"5/27/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Courses/Coursera/Learning how to learn/Tasks lists/","title":"Tasks Lists","lastUpdatedAt":"2022-05-27T09:02:01.000Z","lastUpdated":"5/27/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Engineering/Consistent hashing/","title":"Consistent hashing with bounded load","lastUpdatedAt":"2022-05-27T09:02:01.000Z","lastUpdated":"5/27/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Engineering/Design Documents/","title":"Design Documents","lastUpdatedAt":"2022-05-27T09:02:01.000Z","lastUpdated":"5/27/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Engineering/Key-Value Stores/","title":"Tools","lastUpdatedAt":"2022-05-27T09:02:01.000Z","lastUpdated":"5/27/2022"},"frontmatter":{"draft":false,"tags":[]}}]}},
    "staticQueryHashes": ["2230547434","2320115945","3495835395","451533639"]}