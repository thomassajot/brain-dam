{
    "componentChunkName": "component---node-modules-gatsby-theme-primer-wiki-src-templates-post-query-js",
    "path": "/Engineering/Load Balancer/",
    "result": {"data":{"mdx":{"id":"13ab4c46-9f7e-5976-951b-77bc26c2336e","tableOfContents":{"items":[{"url":"#how-does-the-load-balancer-work-","title":"How does the load balancer work ?","items":[{"url":"#how-does-a-lb-has-a-new-server-to-route-to-","title":"How does a LB has a new server to route to ?"},{"url":"#how-do-we-select-the-server-to-send-to-","title":"How do we select the server to send to ?"},{"url":"#using-multiple-lb","title":"Using multiple LB"},{"url":"#redundant-lb","title":"Redundant LB"}]},{"url":"#tools","title":"Tools"}]},"fields":{"title":"How does the load balancer work ?","slug":"/Engineering/Load Balancer/","url":"https://thomassajot.github.io/brain-dam/Engineering/Load Balancer/","editUrl":"https://github.com/thomassajot/brain-dam/tree/main/Engineering/Load Balancer.md","lastUpdatedAt":"2022-02-03T13:24:53.000Z","lastUpdated":"2/3/2022","gitCreatedAt":"2022-02-03T13:24:53.000Z","shouldShowTitle":false},"frontmatter":{"title":"","description":null,"imageAlt":null,"tags":[],"date":null,"dateModified":null,"language":null,"seoTitle":null,"image":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This is a server that can distributes loads between a bunch of servers.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-mermaid\"\n  }, \"graph LR\\nClient_1\\nClient_...[...]\\nClient_N\\n\\nLD((\\\"Load Balancer<br>(Reverse Proxy)\\\"))\\nServer_1\\nServer_...[...]\\nServer_S\\n\\nClient_1 --> LD\\nClient_... --> LD\\nClient_N --> LD\\n\\nLD --> Server_1\\nLD --> Server_...\\nLD --> Server_S\\n\")), mdx(\"h1\", {\n    \"id\": \"how-does-the-load-balancer-work-\"\n  }, \"How does the load balancer work ?\"), mdx(\"p\", null, \"There are Software vs hardware load balancer. The software has more customization and scaling capability. Here we will talk about software load balancer.\"), mdx(\"h2\", {\n    \"id\": \"how-does-a-lb-has-a-new-server-to-route-to-\"\n  }, \"How does a LB has a new server to route to ?\"), mdx(\"p\", null, \"Adding a new server will register itself to the LB\"), mdx(\"h2\", {\n    \"id\": \"how-do-we-select-the-server-to-send-to-\"\n  }, \"How do we select the server to send to ?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pure random redirection.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Round Robin approach: goes through server from top to bottom and come back to first one.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Weighted Round Robin: Still go through the first to the last server, but redirects more traffic or less depending on the weight. This would be useful if you have some more powerful servers \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Using health checks, the LB can identify which server is struggling.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"IP based LB: using a hash of the IP address of the client gets routed to a given server. This is useful when you have caching, because all the request of this client are going to the same server, this improves cache hits.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cache based strategy: all the request related to a given path in the URL go to a given server. Useful if we want to deploy a big change to a given path, this change will only impact the servers that support this part of the path. All other services on the platform are unaffected in case of failure of deployment.\")), mdx(\"h2\", {\n    \"id\": \"using-multiple-lb\"\n  }, \"Using multiple LB\"), mdx(\"p\", null, \"It makes sens to have multiple LB.\"), mdx(\"p\", null, \"For example one LB using IP @, followed by LB following round robin\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-mermaid\"\n  }, \"graph LR\\nClient_1\\nClient_...[...]\\nClient_N\\n\\nLD_IP((\\\"Load Balancer<br>(IP @ routing)\\\"))\\n\\nLD_RR1((\\\"Load Balancer<br>(Round Robin)\\\"))\\nLD_RR2((\\\"Load Balancer<br>(Round Robin)\\\"))\\n\\nServer_1\\nServer_2\\nServer_3\\nServer_4\\n\\nClient_1 --> LD_IP\\nClient_... --> LD_IP\\nClient_N --> LD_IP\\n\\nLD_IP --> LD_RR1\\nLD_IP --> LD_RR1\\nLD_IP --> LD_RR1\\nLD_IP --> LD_RR1\\n\\nLD_IP --> LD_RR2\\nLD_IP --> LD_RR2\\nLD_IP --> LD_RR2\\nLD_IP --> LD_RR2\\n\\n\\n\\nLD_RR1 --> Server_1\\nLD_RR1 --> Server_1\\nLD_RR1 --> Server_2\\nLD_RR1 --> Server_2\\nLD_RR2 --> Server_3\\nLD_RR2 --> Server_3\\nLD_RR2 --> Server_4\\nLD_RR2 --> Server_4\\n\")), mdx(\"h2\", {\n    \"id\": \"redundant-lb\"\n  }, \"Redundant LB\"), mdx(\"p\", null, \"You can have multiple load balancer to help in case of failure of a LB server. These servers communicate btw each other.\"), mdx(\"h1\", {\n    \"id\": \"tools\"\n  }, \"Tools\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Nginx\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"This is a server that can distributes loads between a bunch of servers.\n```mermaid \ngraph LR\nClient_1\nClient_...[...]\nClient_N\n\nLD((\"Load Balancer<br>(Reverse Proxy)\"))\nServer_1\nServer_...[...]\nServer_S\n\nClient_1 --> LD\nClient_... --> LD\nClient_N --> LD\n\nLD --> Server_1\nLD --> Server_...\nLD --> Server_S\n```\n\n# How does the load balancer work ?\nThere are Software vs hardware load balancer. The software has more customization and scaling capability. Here we will talk about software load balancer.\n\n## How does a LB has a new server to route to ?\nAdding a new server will register itself to the LB\n\n## How do we select the server to send to ? \n- Pure random redirection.\n- Round Robin approach: goes through server from top to bottom and come back to first one.\n- Weighted Round Robin: Still go through the first to the last server, but redirects more traffic or less depending on the weight. This would be useful if you have some more powerful servers \n- Using health checks, the LB can identify which server is struggling.\n- IP based LB: using a hash of the IP address of the client gets routed to a given server. This is useful when you have caching, because all the request of this client are going to the same server, this improves cache hits.\n- Cache based strategy: all the request related to a given path in the URL go to a given server. Useful if we want to deploy a big change to a given path, this change will only impact the servers that support this part of the path. All other services on the platform are unaffected in case of failure of deployment.\n\n\n## Using multiple LB\nIt makes sens to have multiple LB.\n\nFor example one LB using IP @, followed by LB following round robin\n\n```mermaid \ngraph LR\nClient_1\nClient_...[...]\nClient_N\n\nLD_IP((\"Load Balancer<br>(IP @ routing)\"))\n\nLD_RR1((\"Load Balancer<br>(Round Robin)\"))\nLD_RR2((\"Load Balancer<br>(Round Robin)\"))\n\nServer_1\nServer_2\nServer_3\nServer_4\n\nClient_1 --> LD_IP\nClient_... --> LD_IP\nClient_N --> LD_IP\n\nLD_IP --> LD_RR1\nLD_IP --> LD_RR1\nLD_IP --> LD_RR1\nLD_IP --> LD_RR1\n\nLD_IP --> LD_RR2\nLD_IP --> LD_RR2\nLD_IP --> LD_RR2\nLD_IP --> LD_RR2\n\n\n\nLD_RR1 --> Server_1\nLD_RR1 --> Server_1\nLD_RR1 --> Server_2\nLD_RR1 --> Server_2\nLD_RR2 --> Server_3\nLD_RR2 --> Server_3\nLD_RR2 --> Server_4\nLD_RR2 --> Server_4\n```\n\n## Redundant LB\nYou can have multiple load balancer to help in case of failure of a LB server. These servers communicate btw each other.\n\n# Tools\n**Nginx**","excerpt":"This is a server that can distributes loads between a bunch of servers. How does the load balancer work ? There are Software vs hardware loâ€¦","outboundReferences":[],"inboundReferences":[]},"tagsOutbound":{"nodes":[]}},"pageContext":{"tags":[],"slug":"/Engineering/Load Balancer/","sidebarItems":[{"title":"Categories","items":[{"title":"Azure","url":"","items":[{"title":"Azure Pipeline","url":"/Azure/Azure pipeline/","items":[]},{"title":"Documentation","url":"/Azure/Azure-ml/","items":[]}]},{"title":"Brain Dam","url":"/","items":[]},{"title":"Engineering","url":"","items":[{"title":"ACID","url":"/Engineering/Relational Databases/","items":[]},{"title":"API Design","url":"/Engineering/API Design/","items":[]},{"title":"Blob Store","url":"/Engineering/Specialized Storage Paradigms/","items":[]},{"title":"Cache for read","url":"/Engineering/Caching/","items":[]},{"title":"Client-Server Model","url":"/Engineering/Client-Server Model/","items":[]},{"title":"Configuration","url":"/Engineering/Configuration/","items":[]},{"title":"Consistent hashing with bounded load","url":"/Engineering/Consistent hashing/","items":[]},{"title":"Distributed Hash Table","url":"/Engineering/Distributed Hash Table/","items":[]},{"title":"Encryption","url":"/Engineering/Security and HTTPS/","items":[]},{"title":"Etcd","url":"/Engineering/Etcd/","items":[]},{"title":"Feature Flags","url":"/Engineering/Feature Flags/","items":[]},{"title":"Forward Proxy","url":"/Engineering/Proxies/","items":[]},{"title":"How does the load balancer work ?","url":"/Engineering/Load Balancer/","items":[]},{"title":"How to implement Leader election for your service ?","url":"/Engineering/Leader Election/","items":[]},{"title":"Idempotent Operation","url":"/Engineering/Idempotent Operation/","items":[]},{"title":"Important points","url":"/Engineering/MapReduce/","items":[]},{"title":"Latency","url":"/Engineering/Latency and Throughput/","items":[]},{"title":"Logging","url":"/Engineering/Logging and Monitoring/","items":[]},{"title":"Other strategy","url":"/Engineering/Jump hashing/","items":[]},{"title":"Other strategy","url":"/Engineering/Rendez-vous Hashing/","items":[]},{"title":"Polling","url":"/Engineering/Polling and Streaming/","items":[]},{"title":"Prometheus","url":"/Engineering/Prometheus/","items":[]},{"title":"Redis","url":"/Engineering/Redis/","items":[]},{"title":"Replication","url":"/Engineering/Replication and Sharding/","items":[]},{"title":"SLA / SLO","url":"/Engineering/Availability/","items":[]},{"title":"Socket","url":"/Engineering/Socket/","items":[]},{"title":"Storage Concept","url":"/Engineering/Storage concept/","items":[]},{"title":"Tools","url":"/Engineering/Key-Value Stores/","items":[]},{"title":"Tools","url":"/Engineering/Peer-To-Peer Networks/","items":[]},{"title":"Tools","url":"/Engineering/Publish-Subscribe Pattern/","items":[]},{"title":"Tools","url":"/Engineering/Rate Limiting/","items":[]},{"title":"Zookeeper","url":"/Engineering/Zookeeper/","items":[]}]},{"title":"ML","url":"","items":[{"title":"Constrained Optimization","url":"/ML/Constrained optimization/","items":[]},{"title":"Coordinate Descent","url":"/ML/Coordinate descent/","items":[]},{"title":"Determinant","url":"/ML/Determinant/","items":[]},{"title":"Dirichlet Distribution","url":"/ML/Dirichlet distribution/","items":[]},{"title":"Eigendecomposition","url":"/ML/Eigendecomposition/","items":[]},{"title":"Exploitation vs exploration","url":"/ML/Multi-armed bandit (AB testing)/","items":[]},{"title":"Frequentist A/B testing","url":"/ML/Frequentist AB testing/","items":[]},{"title":"Gradient","url":"/ML/Gradient/","items":[]},{"title":"Gradient Descend","url":"/ML/Gradient Descend/","items":[]},{"title":"Graph Neural Network","url":"/ML/GNN/","items":[]},{"title":"Hessian","url":"/ML/Hessian/","items":[]},{"title":"Jacobian","url":"/ML/Jacobian/","items":[]},{"title":"Kernel Trick","url":"/ML/Kernel Trick/","items":[]},{"title":"KKT conditions","url":"/ML/KKT/","items":[]},{"title":"Line Search","url":"/ML/Line Search/","items":[]},{"title":"Links","url":"/ML/Latent Dirichlet Allocation/","items":[]},{"title":"Maths","url":"/ML/PCA/","items":[]},{"title":"Matrix Inverse","url":"/ML/Matrix inverse/","items":[]},{"title":"Moore-Penrose Pseudoinverse","url":"/ML/Moore-Penrose Pseudoinverse/","items":[]},{"title":"Naive Bayes Classifier","url":"/ML/Naive Bayes Classifier/","items":[]},{"title":"Newton's Method","url":"/ML/Newton's method/","items":[]},{"title":"Norms","url":"/ML/Norms/","items":[]},{"title":"Overview","url":"/ML/RANSAC/","items":[]},{"title":"Parameter Estimation","url":"/ML/Parameter estimation/","items":[]},{"title":"Positive Definite Matrix","url":"/ML/Positive Definite Matrix/","items":[]},{"title":"Regression Losses","url":"/ML/Regression losses/","items":[]},{"title":"Singular Value Decomposition (SVD)","url":"/ML/Singular Value Decomposition (SVD)/","items":[]},{"title":"Symmetric Matrix","url":"/ML/Symmetric matrix/","items":[]},{"title":"Tool","url":"/ML/Bayesian AB testing/","items":[]},{"title":"Trace of Matrix","url":"/ML/Trace of matrix/","items":[]},{"title":"Trust Region","url":"/ML/trust region/","items":[]},{"title":"Variance and Standard Error","url":"/ML/Variance and Standard error/","items":[]}]},{"title":"Papers","url":"","items":[{"title":"Questions","url":"/Papers/VICREG  variance-invariance-covariance regulaization for self-supervised Learning/","items":[]}]},{"title":"Programming","url":"","items":[{"title":"Example problem: Min Rewards (hard pb)","url":"/Programming/Peak and Valleys/","items":[]}]},{"title":"Python","url":"","items":[{"title":"Dictionary","url":"/Python/Dictionary/","items":[]},{"title":"Is Python Compiled or Interpreted Language","url":"/Python/Is Python Compiled or Interpreted language/","items":[]},{"title":"Pkg Manager","url":"","items":[{"title":"Main Commands","url":"/Python/pkg manager/Conda/","items":[]},{"title":"Mamba","url":"/Python/pkg manager/Mamba/","items":[]},{"title":"PIP","url":"/Python/pkg manager/PIP/","items":[]}]}]},{"title":"Start Here","url":"/Start here/","items":[]},{"title":"Week 1","url":"/Coursera - Learning How to Learn/","items":[]}]}],"tagsGroups":[],"latestPosts":[{"fields":{"slug":"/","title":"Brain Dam","lastUpdatedAt":"2022-05-26T21:19:43.000Z","lastUpdated":"5/26/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Engineering/Distributed Hash Table/","title":"Distributed Hash Table","lastUpdatedAt":"2022-02-03T13:24:53.000Z","lastUpdated":"2/3/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Engineering/Feature Flags/","title":"Feature Flags","lastUpdatedAt":"2022-02-03T13:24:53.000Z","lastUpdated":"2/3/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Engineering/Prometheus/","title":"Prometheus","lastUpdatedAt":"2022-02-03T13:24:53.000Z","lastUpdated":"2/3/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/ML/Gradient Descend/","title":"Gradient Descend","lastUpdatedAt":"2022-02-03T13:24:53.000Z","lastUpdated":"2/3/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Coursera - Learning How to Learn/","title":"Week 1","lastUpdatedAt":"2022-02-03T13:24:53.000Z","lastUpdated":"2/3/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Azure/Azure pipeline/","title":"Azure Pipeline","lastUpdatedAt":"2022-02-03T13:24:53.000Z","lastUpdated":"2/3/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Engineering/API Design/","title":"API Design","lastUpdatedAt":"2022-02-03T13:24:53.000Z","lastUpdated":"2/3/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Engineering/Caching/","title":"Cache for read","lastUpdatedAt":"2022-02-03T13:24:53.000Z","lastUpdated":"2/3/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Engineering/Client-Server Model/","title":"Client-Server Model","lastUpdatedAt":"2022-02-03T13:24:53.000Z","lastUpdated":"2/3/2022"},"frontmatter":{"draft":false,"tags":[]}}]}},
    "staticQueryHashes": ["2230547434","2320115945","3495835395","451533639"]}