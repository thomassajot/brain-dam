{
    "componentChunkName": "component---node-modules-gatsby-theme-primer-wiki-src-templates-post-query-js",
    "path": "/Engineering/Rendez-vous Hashing/",
    "result": {"data":{"mdx":{"id":"42fadf79-afb0-5f0e-8e86-1fe5dc600b31","tableOfContents":{"items":[{"url":"#other-strategy","title":"Other strategy"}]},"fields":{"title":"Other strategy","slug":"/Engineering/Rendez-vous Hashing/","url":"https://thomassajot.github.io/brain-dam/brain-dam/Engineering/Rendez-vous Hashing/","editUrl":"https://github.com/thomassajot/brain-dam/tree/main/Engineering/Rendez-vous Hashing.md","lastUpdatedAt":"2022-02-03T13:24:53.000Z","lastUpdated":"2/3/2022","gitCreatedAt":"2022-02-03T13:24:53.000Z","shouldShowTitle":false},"frontmatter":{"title":"","description":null,"imageAlt":null,"tags":[],"date":null,"dateModified":null,"language":null,"seoTitle":null,"image":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We use a ranking to assign a client to a server. If a server goes down in a cluster, the ranking of server for a given client should be the same if the the top server is still running.\"), mdx(\"h1\", {\n    \"id\": \"other-strategy\"\n  }, \"Other strategy\"), mdx(\"p\", null, \"See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Engineering/Consistent%20hashing/\",\n    \"title\": \"Consistent hashing\"\n  }, \"Consistent hashing\"), \"\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Engineering/Jump%20hashing/\",\n    \"title\": \"Jump hashing\"\n  }, \"Jump hashing\"), \"  \"));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"We use a ranking to assign a client to a server. If a server goes down in a cluster, the ranking of server for a given client should be the same if the the top server is still running.\n\n# Other strategy\nSee [[Consistent hashing]]  \nSee [[Jump hashing]]  ","excerpt":"We use a ranking to assign a client to a server. If a server goes down in a cluster, the ranking of server for a given client should be theâ€¦","outboundReferences":[{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.toptal.com/big-data/consistent-hashing\"\n  }, \"High level explanation\"), \"\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.openstack.org/swift/latest/ring_background.html\"\n  }, \"Tutorial with more details\")), mdx(\"p\", null, \"General Idea:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Hash all the servers IDs (UUID, IP address, ...) and \\\"map\\\" them onto the unit circle.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Hash the object you want to save (like username). Then \\\"map\\\" this hash onto the unit circle\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The location where to store an object is on the closest server on the unit circle in the anti-clockwise direction (for example). \")), mdx(\"p\", null, \"If a node crashes, we need only to move this nodes data, ie \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"K/N\"), \" values, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"K\"), \" being the number of keys and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"N\"), \" the number of nodes / servers in the pool.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Example of 3 servers 5 keys to be mapped.\\n![\", \"[Pasted image 20211110210818.png|700]\", \"]\"), mdx(\"p\", null, \"It is better to have multiple hashes for a given servers (10x, 50x, 1000x ?) so that selecting the closest server for an object is more uniform. The number of keys per servers (10x, ...) depends on the server capacity. This is called the servers \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"weight\"), \".\\nExample of 3 servers with 10 keys per server.\\n![\", \"[Pasted image 20211110211244.png|700]\", \"]\"), mdx(\"h1\", {\n    \"id\": \"consistent-hashing-with-bounded-load\"\n  }, \"Consistent hashing with bounded load\"), mdx(\"h1\", {\n    \"id\": \"questions\"\n  }, \"Questions\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"How do you support duplication over multiple server to be resilient if a machine goes down ? Maybe we can assign a key to the 2 closest servers in the circle ? z\")), mdx(\"h1\", {\n    \"id\": \"other-strategy\"\n  }, \"Other strategy\"), mdx(\"p\", null, \"See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Engineering/Rendez-vous%20Hashing/\",\n    \"title\": \"Rendez-vous Hashing\"\n  }, \"Rendez-vous Hashing\"), \"\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Engineering/Jump%20hashing/\",\n    \"title\": \"Jump hashing\"\n  }, \"Jump hashing\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/Engineering/Consistent hashing/","title":"Consistent hashing with bounded load","shouldShowTitle":false}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"other-strategy\"\n  }, \"Other strategy\"), mdx(\"p\", null, \"See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Engineering/Rendez-vous%20Hashing/\",\n    \"title\": \"Rendez-vous Hashing\"\n  }, \"Rendez-vous Hashing\"), \"\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Engineering/Consistent%20hashing/\",\n    \"title\": \"Consistent hashing\"\n  }, \"Consistent hashing\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/Engineering/Jump hashing/","title":"Other strategy","shouldShowTitle":false}}],"inboundReferences":[{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.toptal.com/big-data/consistent-hashing\"\n  }, \"High level explanation\"), \"\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.openstack.org/swift/latest/ring_background.html\"\n  }, \"Tutorial with more details\")), mdx(\"p\", null, \"General Idea:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Hash all the servers IDs (UUID, IP address, ...) and \\\"map\\\" them onto the unit circle.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Hash the object you want to save (like username). Then \\\"map\\\" this hash onto the unit circle\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The location where to store an object is on the closest server on the unit circle in the anti-clockwise direction (for example). \")), mdx(\"p\", null, \"If a node crashes, we need only to move this nodes data, ie \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"K/N\"), \" values, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"K\"), \" being the number of keys and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"N\"), \" the number of nodes / servers in the pool.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Example of 3 servers 5 keys to be mapped.\\n![\", \"[Pasted image 20211110210818.png|700]\", \"]\"), mdx(\"p\", null, \"It is better to have multiple hashes for a given servers (10x, 50x, 1000x ?) so that selecting the closest server for an object is more uniform. The number of keys per servers (10x, ...) depends on the server capacity. This is called the servers \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"weight\"), \".\\nExample of 3 servers with 10 keys per server.\\n![\", \"[Pasted image 20211110211244.png|700]\", \"]\"), mdx(\"h1\", {\n    \"id\": \"consistent-hashing-with-bounded-load\"\n  }, \"Consistent hashing with bounded load\"), mdx(\"h1\", {\n    \"id\": \"questions\"\n  }, \"Questions\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"How do you support duplication over multiple server to be resilient if a machine goes down ? Maybe we can assign a key to the 2 closest servers in the circle ? z\")), mdx(\"h1\", {\n    \"id\": \"other-strategy\"\n  }, \"Other strategy\"), mdx(\"p\", null, \"See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Engineering/Rendez-vous%20Hashing/\",\n    \"title\": \"Rendez-vous Hashing\"\n  }, \"Rendez-vous Hashing\"), \"\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Engineering/Jump%20hashing/\",\n    \"title\": \"Jump hashing\"\n  }, \"Jump hashing\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/Engineering/Consistent hashing/","title":"Consistent hashing with bounded load"}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"other-strategy\"\n  }, \"Other strategy\"), mdx(\"p\", null, \"See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Engineering/Rendez-vous%20Hashing/\",\n    \"title\": \"Rendez-vous Hashing\"\n  }, \"Rendez-vous Hashing\"), \"\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Engineering/Consistent%20hashing/\",\n    \"title\": \"Consistent hashing\"\n  }, \"Consistent hashing\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/Engineering/Jump hashing/","title":"Other strategy"}}]},"tagsOutbound":{"nodes":[]}},"pageContext":{"tags":[],"slug":"/Engineering/Rendez-vous Hashing/","sidebarItems":[{"title":"Categories","items":[{"title":"Azure","url":"","items":[{"title":"Azure Pipeline","url":"/Azure/Azure pipeline/","items":[]},{"title":"Documentation","url":"/Azure/Azure-ml/","items":[]}]},{"title":"Brain Dam","url":"/","items":[]},{"title":"Courses","url":"","items":[{"title":"Coursera","url":"","items":[{"title":"Learning How to Learn","url":"","items":[{"title":"Chunking","url":"/Courses/Coursera/Learning how to learn/Chunking/","items":[]},{"title":"Illusion of Competence","url":"/Courses/Coursera/Learning how to learn/Illusion of Competence/","items":[]},{"title":"Imposter Syndrome","url":"/Courses/Coursera/Learning how to learn/Imposter syndrome/","items":[]},{"title":"Overlearning","url":"/Courses/Coursera/Learning how to learn/Overlearning/","items":[]},{"title":"Procrastination","url":"/Courses/Coursera/Learning how to learn/Procrastination/","items":[]},{"title":"Tasks Lists","url":"/Courses/Coursera/Learning how to learn/Tasks lists/","items":[]}]}]}]},{"title":"Engineering","url":"","items":[{"title":"ACID","url":"/Engineering/Relational Databases/","items":[]},{"title":"API Design","url":"/Engineering/API Design/","items":[]},{"title":"Blob Store","url":"/Engineering/Specialized Storage Paradigms/","items":[]},{"title":"Cache for read","url":"/Engineering/Caching/","items":[]},{"title":"Client-Server Model","url":"/Engineering/Client-Server Model/","items":[]},{"title":"Configuration","url":"/Engineering/Configuration/","items":[]},{"title":"Consistent hashing with bounded load","url":"/Engineering/Consistent hashing/","items":[]},{"title":"Design Documents","url":"/Engineering/Design Documents/","items":[]},{"title":"Distributed Hash Table","url":"/Engineering/Distributed Hash Table/","items":[]},{"title":"Encryption","url":"/Engineering/Security and HTTPS/","items":[]},{"title":"Etcd","url":"/Engineering/Etcd/","items":[]},{"title":"Feature Flags","url":"/Engineering/Feature Flags/","items":[]},{"title":"Forward Proxy","url":"/Engineering/Proxies/","items":[]},{"title":"How does the load balancer work ?","url":"/Engineering/Load Balancer/","items":[]},{"title":"How to implement Leader election for your service ?","url":"/Engineering/Leader Election/","items":[]},{"title":"Idempotent Operation","url":"/Engineering/Idempotent Operation/","items":[]},{"title":"Important points","url":"/Engineering/MapReduce/","items":[]},{"title":"Latency","url":"/Engineering/Latency and Throughput/","items":[]},{"title":"Logging","url":"/Engineering/Logging and Monitoring/","items":[]},{"title":"Other strategy","url":"/Engineering/Jump hashing/","items":[]},{"title":"Other strategy","url":"/Engineering/Rendez-vous Hashing/","items":[]},{"title":"Polling","url":"/Engineering/Polling and Streaming/","items":[]},{"title":"Prometheus","url":"/Engineering/Prometheus/","items":[]},{"title":"Redis","url":"/Engineering/Redis/","items":[]},{"title":"Replication","url":"/Engineering/Replication and Sharding/","items":[]},{"title":"SLA / SLO","url":"/Engineering/Availability/","items":[]},{"title":"Socket","url":"/Engineering/Socket/","items":[]},{"title":"Storage Concept","url":"/Engineering/Storage concept/","items":[]},{"title":"Tools","url":"/Engineering/Key-Value Stores/","items":[]},{"title":"Tools","url":"/Engineering/Peer-To-Peer Networks/","items":[]},{"title":"Tools","url":"/Engineering/Publish-Subscribe Pattern/","items":[]},{"title":"Tools","url":"/Engineering/Rate Limiting/","items":[]},{"title":"Zookeeper","url":"/Engineering/Zookeeper/","items":[]}]},{"title":"Finance","url":"","items":[{"title":"Growth shares","url":"/Finance/Growth Shares/","items":[]}]},{"title":"ML","url":"","items":[{"title":"Constrained Optimization","url":"/ML/Constrained optimization/","items":[]},{"title":"Coordinate Descent","url":"/ML/Coordinate descent/","items":[]},{"title":"Determinant","url":"/ML/Determinant/","items":[]},{"title":"Dirichlet Distribution","url":"/ML/Dirichlet distribution/","items":[]},{"title":"Eigendecomposition","url":"/ML/Eigendecomposition/","items":[]},{"title":"Exploitation vs exploration","url":"/ML/Multi-armed bandit (AB testing)/","items":[]},{"title":"Feature Hashing","url":"/ML/Feature hashing/","items":[]},{"title":"Frequentist A/B testing","url":"/ML/Frequentist AB testing/","items":[]},{"title":"Gradient","url":"/ML/Gradient/","items":[]},{"title":"Gradient Descend","url":"/ML/Gradient Descend/","items":[]},{"title":"Graph Neural Network","url":"/ML/GNN/","items":[]},{"title":"Hessian","url":"/ML/Hessian/","items":[]},{"title":"Jacobian","url":"/ML/Jacobian/","items":[]},{"title":"Kernel Trick","url":"/ML/Kernel Trick/","items":[]},{"title":"KKT conditions","url":"/ML/KKT/","items":[]},{"title":"Line Search","url":"/ML/Line Search/","items":[]},{"title":"Links","url":"/ML/Latent Dirichlet Allocation/","items":[]},{"title":"Maths","url":"/ML/PCA/","items":[]},{"title":"Matrix Inverse","url":"/ML/Matrix inverse/","items":[]},{"title":"Moore-Penrose Pseudoinverse","url":"/ML/Moore-Penrose Pseudoinverse/","items":[]},{"title":"Named Entity Recognition (NER)","url":"/ML/Named Entity Recognition (NER)/","items":[]},{"title":"Newton's Method","url":"/ML/Newton's method/","items":[]},{"title":"Norms","url":"/ML/Norms/","items":[]},{"title":"Oversampling","url":"/ML/Handle Imablanced datasets/","items":[]},{"title":"Overview","url":"/ML/RANSAC/","items":[]},{"title":"Parameter Estimation","url":"/ML/Parameter estimation/","items":[]},{"title":"Positive Definite Matrix","url":"/ML/Positive Definite Matrix/","items":[]},{"title":"Regression Losses","url":"/ML/Regression losses/","items":[]},{"title":"Singular Value Decomposition (SVD)","url":"/ML/Singular Value Decomposition (SVD)/","items":[]},{"title":"Symmetric Matrix","url":"/ML/Symmetric matrix/","items":[]},{"title":"The ultimate understanding of the Naive Bayes Classifier, version 8","url":"/ML/Naive Bayes Classifier/","items":[]},{"title":"Thompson Sampling","url":"/ML/Thompson Sampling/","items":[]},{"title":"Tool","url":"/ML/Bayesian AB testing/","items":[]},{"title":"Trace of Matrix","url":"/ML/Trace of matrix/","items":[]},{"title":"Trust Region","url":"/ML/trust region/","items":[]},{"title":"Variance and Standard Error","url":"/ML/Variance and Standard error/","items":[]}]},{"title":"Papers","url":"","items":[{"title":"Questions","url":"/Papers/VICREG  variance-invariance-covariance regulaization for self-supervised Learning/","items":[]}]},{"title":"Programming","url":"","items":[{"title":"A- What is Dynamic Programming?","url":"/Programming/Dynamic Programming/","items":[]},{"title":"Example problem: Min Rewards (hard pb)","url":"/Programming/Peak and Valleys/","items":[]},{"title":"Quicksort","url":"/Programming/Quicksort/","items":[]}]},{"title":"Python","url":"","items":[{"title":"Dictionary","url":"/Python/Dictionary/","items":[]},{"title":"Is Python Compiled or Interpreted Language","url":"/Python/Is Python Compiled or Interpreted language/","items":[]}]},{"title":"Start Here","url":"/Start here/","items":[]},{"title":"Week 1","url":"/Coursera - Learning How to Learn/","items":[]}]}],"tagsGroups":[],"latestPosts":[{"fields":{"slug":"/Programming/Quicksort/","title":"Quicksort","lastUpdatedAt":"2022-05-27T09:02:01.000Z","lastUpdated":"5/27/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Courses/Coursera/Learning how to learn/Chunking/","title":"Chunking","lastUpdatedAt":"2022-05-27T09:02:01.000Z","lastUpdated":"5/27/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Courses/Coursera/Learning how to learn/Illusion of Competence/","title":"Illusion of Competence","lastUpdatedAt":"2022-05-27T09:02:01.000Z","lastUpdated":"5/27/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Courses/Coursera/Learning how to learn/Imposter syndrome/","title":"Imposter Syndrome","lastUpdatedAt":"2022-05-27T09:02:01.000Z","lastUpdated":"5/27/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Courses/Coursera/Learning how to learn/Overlearning/","title":"Overlearning","lastUpdatedAt":"2022-05-27T09:02:01.000Z","lastUpdated":"5/27/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Courses/Coursera/Learning how to learn/Procrastination/","title":"Procrastination","lastUpdatedAt":"2022-05-27T09:02:01.000Z","lastUpdated":"5/27/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Courses/Coursera/Learning how to learn/Tasks lists/","title":"Tasks Lists","lastUpdatedAt":"2022-05-27T09:02:01.000Z","lastUpdated":"5/27/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Engineering/Consistent hashing/","title":"Consistent hashing with bounded load","lastUpdatedAt":"2022-05-27T09:02:01.000Z","lastUpdated":"5/27/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Engineering/Design Documents/","title":"Design Documents","lastUpdatedAt":"2022-05-27T09:02:01.000Z","lastUpdated":"5/27/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Engineering/Key-Value Stores/","title":"Tools","lastUpdatedAt":"2022-05-27T09:02:01.000Z","lastUpdated":"5/27/2022"},"frontmatter":{"draft":false,"tags":[]}}]}},
    "staticQueryHashes": ["2230547434","2320115945","3495835395","451533639"]}