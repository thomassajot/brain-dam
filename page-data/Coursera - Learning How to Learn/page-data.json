{
    "componentChunkName": "component---node-modules-gatsby-theme-primer-wiki-src-templates-post-query-js",
    "path": "/Coursera - Learning How to Learn/",
    "result": {"data":{"mdx":{"id":"9f9aaa8b-53ea-5bee-bf58-cf75fd646237","tableOfContents":{"items":[{"url":"#week-1","title":"Week 1","items":[{"url":"#take-away","title":"Take away"}]},{"url":"#week-2","title":"Week 2","items":[{"url":"#chunking","title":"Chunking"},{"url":"#illusions-of-competence-in-learning","title":"Illusions of competence in Learning"},{"url":"#seeing-the-bigger-picture","title":"Seeing the bigger Picture"},{"url":"#interleaving","title":"Interleaving"},{"url":"#summary","title":"Summary"}]}]},"fields":{"title":"Week 1","slug":"/Coursera - Learning How to Learn/","url":"https://demo-obsidian.owenyoung.com/Coursera - Learning How to Learn/","editUrl":"https://github.com/theowenyoung/obsidian-template-gatsby-theme-primer-wiki/tree/main/Coursera - Learning How to Learn.md","lastUpdatedAt":"2022-02-03T13:24:53.000Z","lastUpdated":"2/3/2022","gitCreatedAt":"2022-02-03T13:24:53.000Z","shouldShowTitle":false},"frontmatter":{"title":"","description":null,"imageAlt":null,"tags":[],"date":null,"dateModified":null,"language":null,"seoTitle":null,"image":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Week 1\"), mdx(\"h3\", null, \"2 States of the mind: Focused and Diffused.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The focused mode is when we are focusing on a problem, intensely using pre-built thought pathways in our minds. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The diffused mode is when we are not focusing (doing sport, sleeping, cooking, ...). This disengagement of the mind from a particular subject allows higher level abstraction to be built\")), mdx(\"h3\", null, \"The are 2 (main) state of memory: working and Long term memories\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Working memory is used for short term tasks. We have up to 4 slots or \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"chunks\"), \" of information we can store in our working memory. These slots are temporary so we will forget them pretty quickly.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Long term memory is used for keeping information for a long period of time. It is not easy to add new memories there.\")), mdx(\"p\", null, \"To build knowledge is to create \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"stable\"), \" pathways in our minds. Moving thought processes and memories from short term to long term srtorage. \"), mdx(\"h3\", null, \"Learning habits\"), mdx(\"p\", null, \"To learn something properly, we need to:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"work hard on it. Making the effort to experience new pathways. Being passive is way less productive than active in the learning process (for example watchiung a video <<<< doing the implementation yourself). \"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Then relax, sleep, meditate, cook, do something else. This freeze the attention and allows your brain to assimilate the information. During this step the brain will digesty the information and build new neurological pathways. Sleeping is very important to build this pathways.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Repeat 1. and 2. ! This process helps to migrate the memory from working to long term storage.\")), mdx(\"h3\", null, \"The Pomodoro technique\"), mdx(\"p\", null, \"If you are having a hard time starting a new study, because it is hard, especially if you procrastinate, the pomodoro techniques helps you: \"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Use a timer, give yourself 25 min (you can adapt) of study the material\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Take a break. This gives you a (small) reward after the effort. Which motivates you further and reduces the pain / angst again this study\")), mdx(\"h2\", null, \"Take away\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Efficient learning involves going back and forth between Focused and Diffused modes.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Metaphors provide powerful techniques for learning \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Learning something difficult takes time. Acknowledge it ! \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Practice makes knowledge permanent\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You have to add rest in between focus events (use pomodoro if need be)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Using \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Spaced repetition\"), \" is very good to migrate information from Working to Long term memory. The Anki app is one tool do follow Spaced repetition.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sleeping is very important to learn:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Clean brains \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Is healthy \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Clears unused pathways and strengthen the others ! \")))), mdx(\"p\", null, \"Studying something just before going to bed is also powerful. Your brain will work harder on it over night.\"), mdx(\"hr\", null), mdx(\"hr\", null), mdx(\"h1\", null, \"Week 2\"), mdx(\"h2\", null, \"Chunking\"), mdx(\"p\", null, \"A chunk is a compact packages of information that your mind can easily access.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Chunking is a logical package of pieces of information to make them easier to work with this concept.\"), mdx(\"p\", null, \"The human can sustain 4 chunks in his working memory.\\nA chunk is a network of neurones that are used to firing together.  \"), mdx(\"h3\", null, \"How to form a chunk ?\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"You need to be in focus mode. no TV or anything else. Chunking relies on building new patterns using already existing one. This does not happen well if we are not focused.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"You need to understand the concept you are looking to chunk. This can be done by alternating btw Focused and Diffused mode.\\n\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"But understanding how a problem is solved does not mean you create a chunk\"), \". You need to \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"do it\"), \", and make sure you can use this knowledge.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"It is important to build \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"context\"), \". which is about surrounding information connecting them to the chunk. For example doing problems related to the original chunk. This will create new neural connections to the chunk you are building which makes it easier to come back to in different situations.\")), mdx(\"p\", null, \"Learning is a 2 step process.. Chunking is a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bottom-up\"), \" way to build a chunk (one by one, to learn a specific thing). Practice will increase the number of chunks related to each other. Using the big-picture (diffused mode) you will be able to connect chunks together. This builds the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Context\"), \" that relate chunks into one another.\\n![\", \"[Pasted image 20220124212910.png|600]\", \"]\"), mdx(\"p\", null, \"![\", \"[Pasted image 20220124212611.png|500]\", \"]\"), mdx(\"h2\", null, \"Illusions of competence in Learning\"), mdx(\"h3\", null, \"Importance of Recall\"), mdx(\"p\", null, \"It is better to recall the information of a text just read rather than re-reading the material. The learning is faster and much deeper.\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"The retrieval process itself is useful for remembering.\")), mdx(\"h3\", null, \"Illusion of competence\"), mdx(\"p\", null, \"Reading the solution of a solution, and thinking \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"I understand what they did here\"), \". This is not knowing and you will not improve.\"), mdx(\"p\", null, \"In the same way, reading google solutions will keep the illusion of competence.\"), mdx(\"p\", null, \"re-reading and highlirting too much text promotes ILLUSION OF Competence. \"), mdx(\"p\", null, \"--> \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Testing yourself promotes long term learning via stabilising activations patterns in a large brain area.\"), \"\\n--> Do Mini testing !!!!!!!!\\n--> You can train to recall your information in different rooms in order to dissociate the knowledge from where you learned it.\"), mdx(\"h3\", null, \"Value of making mistakes\"), mdx(\"p\", null, \"Mistakes are useful during mini testing. These mistakes help correct your thinking.\"), mdx(\"h2\", null, \"Seeing the bigger Picture\"), mdx(\"h3\", null, \"Library of chunks\"), mdx(\"p\", null, \"Having many chunks helps to have a library of knowledge. You need to practice with growing chunks in order to remember and srtill be able to recall / use them.\"), mdx(\"h3\", null, \"Two ways to solve problem:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Sequential thinking, using the focused mode\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"or Holistic (global) approahc. Using intuition / Diffuse modes. A solutuon the diffuse mode provide should be verified in a focused mode.\")), mdx(\"h2\", null, \"Interleaving\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Overlearning\"), \" is when you work too much on the same material within the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"same session\"), \" . It is still usefull to master something, but be careful when to use it.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Doing also the same thing you already know in further sessions is not good and give an illusion of competence again. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"We need to do a \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Deliberate practice\"), \" which is about balancing your study, studying what you find difficult.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Einstellung: an idea you already have in mind prevent a better idea or solution of being found.  You need to make sure that your original intuition is not false.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Interleaving\"), \": Once you have learned a new material / chunk and are not very familiar with it, interleaving is about balancing practicing with problems of different types around this chunk.\")), mdx(\"p\", null, \"Interleave is very important. it helps to build this creative pattern that you can rely on in new problems.\"), mdx(\"h2\", null, \"Summary\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Chunks are pieces of information that are bound together through use and through meaning.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Chunk is a single easy item to access that uses one slot in the working memory. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Chunks are build with Focused attention, understanding and practice\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Simple Recall (remembering the key points without looking at the page) is a powerful way to build chunks. \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bonus to recalling memory in different locations.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Transfer\"), \" is the fact that you can relate chunks over different domains. They will help you learn new chunks\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Interleaving learning by practicing your choice of concepts and techniques. This helps at becoming flexible with which chunks to use\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Test yourself !!! this is a good way of avoiding the illusions of competence.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mistakes are good.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Avoid practicing at easy stuff.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Einstellung is when an idea you already have in mind prevents a better idea / solutions from being found.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"L:aw of Serendipity: just learn one thing, and you will see that the next one will be a little bit simpler to learn.\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"# Week 1\n### 2 States of the mind: Focused and Diffused. \n- The focused mode is when we are focusing on a problem, intensely using pre-built thought pathways in our minds. \n- The diffused mode is when we are not focusing (doing sport, sleeping, cooking, ...). This disengagement of the mind from a particular subject allows higher level abstraction to be built\n\n### The are 2 (main) state of memory: working and Long term memories\n- Working memory is used for short term tasks. We have up to 4 slots or `chunks` of information we can store in our working memory. These slots are temporary so we will forget them pretty quickly.\n- Long term memory is used for keeping information for a long period of time. It is not easy to add new memories there.\n\nTo build knowledge is to create `stable` pathways in our minds. Moving thought processes and memories from short term to long term srtorage. \n\n\n### Learning habits\nTo learn something properly, we need to:\n1. work hard on it. Making the effort to experience new pathways. Being passive is way less productive than active in the learning process (for example watchiung a video <<<< doing the implementation yourself). \n2. Then relax, sleep, meditate, cook, do something else. This freeze the attention and allows your brain to assimilate the information. During this step the brain will digesty the information and build new neurological pathways. Sleeping is very important to build this pathways.\n3. Repeat 1. and 2. ! This process helps to migrate the memory from working to long term storage.\n\n### The Pomodoro technique\nIf you are having a hard time starting a new study, because it is hard, especially if you procrastinate, the pomodoro techniques helps you: \n1. Use a timer, give yourself 25 min (you can adapt) of study the material\n2. Take a break. This gives you a (small) reward after the effort. Which motivates you further and reduces the pain / angst again this study\n\n## Take away\n- Efficient learning involves going back and forth between Focused and Diffused modes.\n- Metaphors provide powerful techniques for learning \n- Learning something difficult takes time. Acknowledge it ! \n- Practice makes knowledge permanent\n- You have to add rest in between focus events (use pomodoro if need be)\n- Using `Spaced repetition` is very good to migrate information from Working to Long term memory. The Anki app is one tool do follow Spaced repetition.\n- Sleeping is very important to learn:\n\t- Clean brains \n\t- Is healthy \n\t- Clears unused pathways and strengthen the others ! \n\nStudying something just before going to bed is also powerful. Your brain will work harder on it over night.\n\n__________________\n__________________\n\n\n# Week 2\n\n## Chunking\nA chunk is a compact packages of information that your mind can easily access.  \nChunking is a logical package of pieces of information to make them easier to work with this concept.\n\nThe human can sustain 4 chunks in his working memory.\nA chunk is a network of neurones that are used to firing together.  \n\n### How to form a chunk ? \n1. You need to be in focus mode. no TV or anything else. Chunking relies on building new patterns using already existing one. This does not happen well if we are not focused.\n2. You need to understand the concept you are looking to chunk. This can be done by alternating btw Focused and Diffused mode. \n\t**But understanding how a problem is solved does not mean you create a chunk**. You need to **do it**, and make sure you can use this knowledge.\n3. It is important to build **context**. which is about surrounding information connecting them to the chunk. For example doing problems related to the original chunk. This will create new neural connections to the chunk you are building which makes it easier to come back to in different situations.\n\nLearning is a 2 step process.. Chunking is a `bottom-up` way to build a chunk (one by one, to learn a specific thing). Practice will increase the number of chunks related to each other. Using the big-picture (diffused mode) you will be able to connect chunks together. This builds the **Context** that relate chunks into one another.\n![[Pasted image 20220124212910.png|600]]\n\n![[Pasted image 20220124212611.png|500]]\n\n\n## Illusions of competence in Learning\n### Importance of Recall\nIt is better to recall the information of a text just read rather than re-reading the material. The learning is faster and much deeper.\n**The retrieval process itself is useful for remembering.**\n\n### Illusion of competence\nReading the solution of a solution, and thinking `I understand what they did here`. This is not knowing and you will not improve.\n\nIn the same way, reading google solutions will keep the illusion of competence.\n\nre-reading and highlirting too much text promotes ILLUSION OF Competence. \n\n--> **Testing yourself promotes long term learning via stabilising activations patterns in a large brain area.**\n--> Do Mini testing !!!!!!!!\n--> You can train to recall your information in different rooms in order to dissociate the knowledge from where you learned it.\n\n### Value of making mistakes\nMistakes are useful during mini testing. These mistakes help correct your thinking.\n\n\n\n## Seeing the bigger Picture\n### Library of chunks\n\nHaving many chunks helps to have a library of knowledge. You need to practice with growing chunks in order to remember and srtill be able to recall / use them.\n\n### Two ways to solve problem:\n1. Sequential thinking, using the focused mode\n2. or Holistic (global) approahc. Using intuition / Diffuse modes. A solutuon the diffuse mode provide should be verified in a focused mode.\n\n\n## Interleaving\n- **Overlearning** is when you work too much on the same material within the **same session** . It is still usefull to master something, but be careful when to use it.\n- Doing also the same thing you already know in further sessions is not good and give an illusion of competence again. \n- We need to do a **Deliberate practice** which is about balancing your study, studying what you find difficult.\n- Einstellung: an idea you already have in mind prevent a better idea or solution of being found.  You need to make sure that your original intuition is not false.\n- **Interleaving**: Once you have learned a new material / chunk and are not very familiar with it, interleaving is about balancing practicing with problems of different types around this chunk.\n\nInterleave is very important. it helps to build this creative pattern that you can rely on in new problems.\n\n\n\n## Summary\n- Chunks are pieces of information that are bound together through use and through meaning.\n- Chunk is a single easy item to access that uses one slot in the working memory. \n- Chunks are build with Focused attention, understanding and practice\n- Simple Recall (remembering the key points without looking at the page) is a powerful way to build chunks. \n\t- Bonus to recalling memory in different locations.\n- `Transfer` is the fact that you can relate chunks over different domains. They will help you learn new chunks\n- Interleaving learning by practicing your choice of concepts and techniques. This helps at becoming flexible with which chunks to use\n- Test yourself !!! this is a good way of avoiding the illusions of competence.\n- Mistakes are good.\n- Avoid practicing at easy stuff.\n- Einstellung is when an idea you already have in mind prevents a better idea / solutions from being found.\n- L:aw of Serendipity: just learn one thing, and you will see that the next one will be a little bit simpler to learn.\n","excerpt":"Week 1 2 States of the mind: Focused and Diffused. The focused mode is when we are focusing on a problem, intensely using pre-built thought…","outboundReferences":[],"inboundReferences":[]},"tagsOutbound":{"nodes":[]}},"pageContext":{"tags":[],"slug":"/Coursera - Learning How to Learn/","sidebarItems":[{"title":"Categories","items":[{"title":"Azure","url":"","items":[{"title":"Azure Pipeline","url":"/Azure/Azure pipeline/","items":[]},{"title":"Documentation","url":"/Azure/Azure-ml/","items":[]}]},{"title":"Brain Dam: Keeping information Upd","url":"/","items":[]},{"title":"Engineering","url":"","items":[{"title":"ACID","url":"/Engineering/Relational Databases/","items":[]},{"title":"API Design","url":"/Engineering/API Design/","items":[]},{"title":"Blob Store","url":"/Engineering/Specialized Storage Paradigms/","items":[]},{"title":"Cache for read","url":"/Engineering/Caching/","items":[]},{"title":"Client-Server Model","url":"/Engineering/Client-Server Model/","items":[]},{"title":"Configuration","url":"/Engineering/Configuration/","items":[]},{"title":"Consistent hashing with bounded load","url":"/Engineering/Consistent hashing/","items":[]},{"title":"Distributed Hash Table","url":"/Engineering/Distributed Hash Table/","items":[]},{"title":"Encryption","url":"/Engineering/Security and HTTPS/","items":[]},{"title":"Etcd","url":"/Engineering/Etcd/","items":[]},{"title":"Feature Flags","url":"/Engineering/Feature Flags/","items":[]},{"title":"Forward Proxy","url":"/Engineering/Proxies/","items":[]},{"title":"How does the load balancer work ?","url":"/Engineering/Load Balancer/","items":[]},{"title":"How to implement Leader election for your service ?","url":"/Engineering/Leader Election/","items":[]},{"title":"Idempotent Operation","url":"/Engineering/Idempotent Operation/","items":[]},{"title":"Important points","url":"/Engineering/MapReduce/","items":[]},{"title":"Latency","url":"/Engineering/Latency and Throughput/","items":[]},{"title":"Logging","url":"/Engineering/Logging and Monitoring/","items":[]},{"title":"Other strategy","url":"/Engineering/Jump hashing/","items":[]},{"title":"Other strategy","url":"/Engineering/Rendez-vous Hashing/","items":[]},{"title":"Polling","url":"/Engineering/Polling and Streaming/","items":[]},{"title":"Prometheus","url":"/Engineering/Prometheus/","items":[]},{"title":"Redis","url":"/Engineering/Redis/","items":[]},{"title":"Replication","url":"/Engineering/Replication and Sharding/","items":[]},{"title":"SLA / SLO","url":"/Engineering/Availability/","items":[]},{"title":"Socket","url":"/Engineering/Socket/","items":[]},{"title":"Storage Concept","url":"/Engineering/Storage concept/","items":[]},{"title":"Tools","url":"/Engineering/Key-Value Stores/","items":[]},{"title":"Tools","url":"/Engineering/Peer-To-Peer Networks/","items":[]},{"title":"Tools","url":"/Engineering/Publish-Subscribe Pattern/","items":[]},{"title":"Tools","url":"/Engineering/Rate Limiting/","items":[]},{"title":"Zookeeper","url":"/Engineering/Zookeeper/","items":[]}]},{"title":"ML","url":"","items":[{"title":"Constrained Optimization","url":"/ML/Constrained optimization/","items":[]},{"title":"Coordinate Descent","url":"/ML/Coordinate descent/","items":[]},{"title":"Determinant","url":"/ML/Determinant/","items":[]},{"title":"Dirichlet Distribution","url":"/ML/Dirichlet distribution/","items":[]},{"title":"Eigendecomposition","url":"/ML/Eigendecomposition/","items":[]},{"title":"Exploitation vs exploration","url":"/ML/Multi-armed bandit (AB testing)/","items":[]},{"title":"Frequentist A/B testing","url":"/ML/Frequentist AB testing/","items":[]},{"title":"Gradient","url":"/ML/Gradient/","items":[]},{"title":"Gradient Descend","url":"/ML/Gradient Descend/","items":[]},{"title":"Graph Neural Network","url":"/ML/GNN/","items":[]},{"title":"Hessian","url":"/ML/Hessian/","items":[]},{"title":"Jacobian","url":"/ML/Jacobian/","items":[]},{"title":"Kernel Trick","url":"/ML/Kernel Trick/","items":[]},{"title":"KKT conditions","url":"/ML/KKT/","items":[]},{"title":"Line Search","url":"/ML/Line Search/","items":[]},{"title":"Links","url":"/ML/Latent Dirichlet Allocation/","items":[]},{"title":"Maths","url":"/ML/PCA/","items":[]},{"title":"Matrix Inverse","url":"/ML/Matrix inverse/","items":[]},{"title":"Moore-Penrose Pseudoinverse","url":"/ML/Moore-Penrose Pseudoinverse/","items":[]},{"title":"Naive Bayes Classifier","url":"/ML/Naive Bayes Classifier/","items":[]},{"title":"Newton's Method","url":"/ML/Newton's method/","items":[]},{"title":"Norms","url":"/ML/Norms/","items":[]},{"title":"Overview","url":"/ML/RANSAC/","items":[]},{"title":"Parameter Estimation","url":"/ML/Parameter estimation/","items":[]},{"title":"Positive Definite Matrix","url":"/ML/Positive Definite Matrix/","items":[]},{"title":"Regression Losses","url":"/ML/Regression losses/","items":[]},{"title":"Singular Value Decomposition (SVD)","url":"/ML/Singular Value Decomposition (SVD)/","items":[]},{"title":"Symmetric Matrix","url":"/ML/Symmetric matrix/","items":[]},{"title":"Tool","url":"/ML/Bayesian AB testing/","items":[]},{"title":"Trace of Matrix","url":"/ML/Trace of matrix/","items":[]},{"title":"Trust Region","url":"/ML/trust region/","items":[]},{"title":"Variance and Standard Error","url":"/ML/Variance and Standard error/","items":[]}]},{"title":"Papers","url":"","items":[{"title":"Questions","url":"/Papers/VICREG  variance-invariance-covariance regulaization for self-supervised Learning/","items":[]}]},{"title":"Programming","url":"","items":[{"title":"Example problem: Min Rewards (hard pb)","url":"/Programming/Peak and Valleys/","items":[]}]},{"title":"Python","url":"","items":[{"title":"Dictionary","url":"/Python/Dictionary/","items":[]},{"title":"Is Python Compiled or Interpreted Language","url":"/Python/Is Python Compiled or Interpreted language/","items":[]},{"title":"Pkg Manager","url":"","items":[{"title":"Main Commands","url":"/Python/pkg manager/Conda/","items":[]},{"title":"Mamba","url":"/Python/pkg manager/Mamba/","items":[]},{"title":"PIP","url":"/Python/pkg manager/PIP/","items":[]}]}]},{"title":"Start Here","url":"/Start here/","items":[]},{"title":"Week 1","url":"/Coursera - Learning How to Learn/","items":[]}]}],"tagsGroups":[],"latestPosts":[{"fields":{"slug":"/Engineering/Distributed Hash Table/","title":"Distributed Hash Table","lastUpdatedAt":"2022-02-03T13:24:53.000Z","lastUpdated":"2/3/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Engineering/Feature Flags/","title":"Feature Flags","lastUpdatedAt":"2022-02-03T13:24:53.000Z","lastUpdated":"2/3/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Engineering/Prometheus/","title":"Prometheus","lastUpdatedAt":"2022-02-03T13:24:53.000Z","lastUpdated":"2/3/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/ML/Gradient Descend/","title":"Gradient Descend","lastUpdatedAt":"2022-02-03T13:24:53.000Z","lastUpdated":"2/3/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Coursera - Learning How to Learn/","title":"Week 1","lastUpdatedAt":"2022-02-03T13:24:53.000Z","lastUpdated":"2/3/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Azure/Azure pipeline/","title":"Azure Pipeline","lastUpdatedAt":"2022-02-03T13:24:53.000Z","lastUpdated":"2/3/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Azure/Azure-ml/","title":"Documentation","lastUpdatedAt":"2022-02-03T13:24:53.000Z","lastUpdated":"2/3/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Engineering/API Design/","title":"API Design","lastUpdatedAt":"2022-02-03T13:24:53.000Z","lastUpdated":"2/3/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Engineering/Availability/","title":"SLA / SLO","lastUpdatedAt":"2022-02-03T13:24:53.000Z","lastUpdated":"2/3/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Engineering/Caching/","title":"Cache for read","lastUpdatedAt":"2022-02-03T13:24:53.000Z","lastUpdated":"2/3/2022"},"frontmatter":{"draft":false,"tags":[]}}]}},
    "staticQueryHashes": ["2230547434","2320115945","3495835395","451533639"]}